do
	local v0 = string.char;
	local v1 = string.byte;
	local v2 = string.sub;
	local v3 = bit32 or bit;
	local v4 = v3.bxor;
	local v5 = table.concat;
	local v6 = table.insert;
	local function v7(v24, v25)
		local v26 = 0;
		local v27;
		while true do
			if (v26 == 1) then
				return v5(v27);
			end
			if (v26 == 0) then
				v27 = {};
				for v43 = 1, #v24 do
					v6(v27, v0(v4(v1(v2(v24, v43, v43 + 1)), v1(v2(v25, 1 + (v43 % #v25), 1 + (v43 % #v25) + 1))) % 256));
				end
				v26 = 1;
			end
		end
	end
	local v8 = tonumber;
	local v9 = string.byte;
	local v10 = string.char;
	local v11 = string.sub;
	local v12 = string.gsub;
	local v13 = string.rep;
	local v14 = table.concat;
	local v15 = table.insert;
	local v16 = math.ldexp;
	local v17 = getfenv or function()
		return _ENV;
	end;
	local v18 = setmetatable;
	local v19 = pcall;
	local v20 = select;
	local v21 = unpack or table.unpack;
	local v22 = tonumber;
	local function v23(v28, v29, ...)
		local v30 = 0;
		local v31;
		local v32;
		local v33;
		local v34;
		local v35;
		local v36;
		local v37;
		local v38;
		local v39;
		local v40;
		local v41;
		local v42;
		while true do
			if (v30 == 3) then
				function v37()
					local v44 = 0;
					local v45;
					local v46;
					local v47;
					local v48;
					local v49;
					local v50;
					while true do
						if (v44 == 2) then
							v49 = v33(v46, 21, 31);
							v50 = ((v33(v46, 32) == 1) and -(1 - 0)) or 1;
							v44 = 3;
						end
						if (v44 == 0) then
							v45 = v36();
							v46 = v36();
							v44 = 1;
						end
						if (v44 == 1) then
							v47 = 1;
							v48 = (v33(v46, 1, 20) * (2 ^ 32)) + v45;
							v44 = 2;
						end
						if (v44 == 3) then
							if (v49 == 0) then
								if (v48 == (0 - 0)) then
									return v50 * 0;
								else
									local v102 = 0;
									local v103;
									while true do
										if (0 == v102) then
											v103 = 0;
											while true do
												if (0 == v103) then
													v49 = 1;
													v47 = 0;
													break;
												end
											end
											break;
										end
									end
								end
							elseif (v49 == 2047) then
								return ((v48 == 0) and (v50 * (1 / (619 - (555 + 64))))) or (v50 * NaN);
							end
							return v16(v50, v49 - 1023) * (v47 + (v48 / (2 ^ 52)));
						end
					end
				end
				v38 = nil;
				function v38(v51)
					local v52 = 0;
					local v53;
					local v54;
					while true do
						if (0 == v52) then
							v53 = nil;
							if not v51 then
								local v101 = 0;
								while true do
									if (v101 == 0) then
										v51 = v36();
										if (v51 == 0) then
											return "";
										end
										break;
									end
								end
							end
							v52 = 1;
						end
						if (v52 == 1) then
							v53 = v11(v28, v31, (v31 + v51) - 1);
							v31 = v31 + v51;
							v52 = 2;
						end
						if (v52 == 3) then
							return v14(v54);
						end
						if (v52 == 2) then
							v54 = {};
							for v95 = 1, #v53 do
								v54[v95] = v10(v9(v11(v53, v95, v95)));
							end
							v52 = 3;
						end
					end
				end
				v39 = v36;
				v30 = 4;
			end
			if (v30 == 4) then
				v40 = nil;
				function v40(...)
					return {...}, v20("#", ...);
				end
				v41 = nil;
				function v41()
					local v55 = 0;
					local v56;
					local v57;
					local v58;
					local v59;
					local v60;
					local v61;
					local v62;
					while true do
						if (v55 == 0) then
							v56 = 0;
							v57 = nil;
							v55 = 1;
						end
						if (3 == v55) then
							v62 = nil;
							while true do
								local v97 = 0;
								while true do
									if (1 == v97) then
										if (v56 == 1) then
											local v107 = 0;
											while true do
												if (v107 == 0) then
													v60 = {v57,v58,nil,v59};
													v61 = v36();
													v107 = 1;
												end
												if (v107 == 1) then
													v62 = {};
													v56 = 2;
													break;
												end
											end
										end
										if (2 == v56) then
											local v108 = 0;
											while true do
												if (v108 == 1) then
													for v119 = 1, v36() do
														local v120 = 0;
														local v121;
														local v122;
														while true do
															if (v120 == 0) then
																v121 = 0;
																v122 = nil;
																v120 = 1;
															end
															if (v120 == 1) then
																while true do
																	if (v121 == 0) then
																		v122 = v34();
																		if (v33(v122, 1, 1) == 0) then
																			local v154 = 0;
																			local v155;
																			local v156;
																			local v157;
																			local v158;
																			while true do
																				if (v154 == 1) then
																					v157 = nil;
																					v158 = nil;
																					v154 = 2;
																				end
																				if (v154 == 2) then
																					while true do
																						if (v155 == 1) then
																							local v162 = 0;
																							while true do
																								if (v162 == 0) then
																									v158 = {v35(),v35(),nil,nil};
																									if (v156 == 0) then
																										local v168 = 0;
																										local v169;
																										while true do
																											if (0 == v168) then
																												v169 = 0;
																												while true do
																													if (v169 == 0) then
																														v158[3] = v35();
																														v158[4] = v35();
																														break;
																													end
																												end
																												break;
																											end
																										end
																									elseif (v156 == 1) then
																										v158[3] = v36();
																									elseif (v156 == (1 + 1)) then
																										v158[3] = v36() - (2 ^ 16);
																									elseif (v156 == 3) then
																										local v440 = 0;
																										while true do
																											if (0 == v440) then
																												v158[3] = v36() - (2 ^ (3 + 13));
																												v158[4] = v35();
																												break;
																											end
																										end
																									end
																									v162 = 1;
																								end
																								if (v162 == 1) then
																									v155 = 2;
																									break;
																								end
																							end
																						end
																						if (v155 == 0) then
																							local v163 = 0;
																							while true do
																								if (v163 == 1) then
																									v155 = 1;
																									break;
																								end
																								if (0 == v163) then
																									v156 = v33(v122, 2, 3);
																									v157 = v33(v122, 4, 6);
																									v163 = 1;
																								end
																							end
																						end
																						if (v155 == 3) then
																							if (v33(v157, 3, 3) == 1) then
																								v158[1641 - (1523 + 114)] = v62[v158[4]];
																							end
																							v57[v119] = v158;
																							break;
																						end
																						if (v155 == 2) then
																							local v165 = 0;
																							while true do
																								if (v165 == 0) then
																									if (v33(v157, 1, 1) == 1) then
																										v158[879 - (282 + 595)] = v62[v158[2]];
																									end
																									if (v33(v157, 2, 2) == 1) then
																										v158[3] = v62[v158[3]];
																									end
																									v165 = 1;
																								end
																								if (v165 == 1) then
																									v155 = 3;
																									break;
																								end
																							end
																						end
																					end
																					break;
																				end
																				if (v154 == 0) then
																					v155 = 0;
																					v156 = nil;
																					v154 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
																break;
															end
														end
													end
													v56 = 3;
													break;
												end
												if (v108 == 0) then
													for v123 = 1, v61 do
														local v124 = 0;
														local v125;
														local v126;
														local v127;
														while true do
															if (0 == v124) then
																v125 = 0;
																v126 = nil;
																v124 = 1;
															end
															if (v124 == 1) then
																v127 = nil;
																while true do
																	if (v125 == 1) then
																		if (v126 == 1) then
																			v127 = v34() ~= 0;
																		elseif (v126 == (933 - (857 + 74))) then
																			v127 = v37();
																		elseif (v126 == (571 - (367 + 201))) then
																			v127 = v38();
																		end
																		v62[v123] = v127;
																		break;
																	end
																	if (v125 == 0) then
																		local v149 = 0;
																		while true do
																			if (v149 == 0) then
																				v126 = v34();
																				v127 = nil;
																				v149 = 1;
																			end
																			if (v149 == 1) then
																				v125 = 1;
																				break;
																			end
																		end
																	end
																end
																break;
															end
														end
													end
													v60[930 - (214 + 713)] = v34();
													v108 = 1;
												end
											end
										end
										break;
									end
									if (v97 == 0) then
										if (v56 == 3) then
											local v109 = 0;
											while true do
												if (v109 == 0) then
													for v128 = 1, v36() do
														v58[v128 - 1] = v41();
													end
													return v60;
												end
											end
										end
										if (v56 == 0) then
											local v110 = 0;
											while true do
												if (v110 == 1) then
													v59 = {};
													v56 = 1;
													break;
												end
												if (v110 == 0) then
													v57 = {};
													v58 = {};
													v110 = 1;
												end
											end
										end
										v97 = 1;
									end
								end
							end
							break;
						end
						if (v55 == 2) then
							v60 = nil;
							v61 = nil;
							v55 = 3;
						end
						if (v55 == 1) then
							v58 = nil;
							v59 = nil;
							v55 = 2;
						end
					end
				end
				v30 = 5;
			end
			if (v30 == 1) then
				function v33(v63, v64, v65)
					if v65 then
						local v87 = 0;
						local v88;
						local v89;
						while true do
							if (v87 == 0) then
								v88 = 0;
								v89 = nil;
								v87 = 1;
							end
							if (v87 == 1) then
								while true do
									if (0 == v88) then
										local v106 = 0;
										while true do
											if (0 == v106) then
												v89 = (v63 / (2 ^ (v64 - 1))) % (2 ^ (((v65 - 1) - (v64 - (2 - 1))) + 1));
												return v89 - (v89 % 1);
											end
										end
									end
								end
								break;
							end
						end
					else
						local v90 = 0;
						local v91;
						while true do
							if (v90 == 0) then
								v91 = 2 ^ (v64 - 1);
								return (((v63 % (v91 + v91)) >= v91) and 1) or 0;
							end
						end
					end
				end
				v34 = nil;
				function v34()
					local v66 = 0;
					local v67;
					local v68;
					while true do
						if (v66 == 0) then
							v67 = 0;
							v68 = nil;
							v66 = 1;
						end
						if (v66 == 1) then
							while true do
								local v98 = 0;
								while true do
									if (v98 == 0) then
										if (0 == v67) then
											local v111 = 0;
											while true do
												if (v111 == 1) then
													v67 = 1;
													break;
												end
												if (v111 == 0) then
													v68 = v9(v28, v31, v31);
													v31 = v31 + 1;
													v111 = 1;
												end
											end
										end
										if (v67 == 1) then
											return v68;
										end
										break;
									end
								end
							end
							break;
						end
					end
				end
				v35 = nil;
				v30 = 2;
			end
			if (v30 == 5) then
				v42 = nil;
				function v42(v69, v70, v71)
					local v72 = 0;
					local v73;
					local v74;
					local v75;
					local v76;
					while true do
						if (1 == v72) then
							v75 = nil;
							v76 = nil;
							v72 = 2;
						end
						if (v72 == 0) then
							v73 = 0;
							v74 = nil;
							v72 = 1;
						end
						if (v72 == 2) then
							while true do
								local v99 = 0;
								while true do
									if (0 == v99) then
										if (v73 == 0) then
											local v112 = 0;
											while true do
												if (0 == v112) then
													v74 = v69[1];
													v75 = v69[2];
													v112 = 1;
												end
												if (v112 == 1) then
													v73 = 1;
													break;
												end
											end
										end
										if (v73 == 1) then
											local v113 = 0;
											while true do
												if (v113 == 0) then
													v76 = v69[3];
													return function(...)
														local v130 = 0;
														local v131;
														local v132;
														local v133;
														local v134;
														local v135;
														local v136;
														local v137;
														local v138;
														local v139;
														local v140;
														local v141;
														local v142;
														local v143;
														local v144;
														while true do
															if (v130 == 0) then
																v131 = v74;
																v132 = v75;
																v133 = v76;
																v134 = v40;
																v130 = 1;
															end
															if (1 == v130) then
																v135 = 1;
																v136 = -1;
																v137 = {};
																v138 = {...};
																v130 = 2;
															end
															if (v130 == 3) then
																v142 = (v139 - v133) + 1;
																v143 = nil;
																v144 = nil;
																while true do
																	local v145 = 0;
																	local v146;
																	while true do
																		if (v145 == 0) then
																			v146 = 0;
																			while true do
																				if (0 == v146) then
																					local v159 = 0;
																					while true do
																						if (0 == v159) then
																							v143 = v131[v135];
																							v144 = v143[1];
																							v159 = 1;
																						end
																						if (v159 == 1) then
																							v146 = 1;
																							break;
																						end
																					end
																				end
																				if (v146 == 1) then
																					if (v144 <= (53 + 5)) then
																						if (v144 <= 28) then
																							if (v144 <= 13) then
																								if (v144 <= (7 - 1)) then
																									if (v144 <= (1067 - (68 + 997))) then
																										if (v144 <= 0) then
																											if (v141[v143[2]] == v143[4]) then
																												v135 = v135 + (1271 - (226 + 1044));
																											else
																												v135 = v143[3];
																											end
																										elseif (v144 == 1) then
																											local v199 = 0;
																											local v200;
																											local v201;
																											while true do
																												if (v199 == 0) then
																													v200 = 0;
																													v201 = nil;
																													v199 = 1;
																												end
																												if (1 == v199) then
																													while true do
																														if (v200 == 0) then
																															v201 = v143[2];
																															v141[v201] = v141[v201](v21(v141, v201 + 1, v136));
																															break;
																														end
																													end
																													break;
																												end
																											end
																										else
																											v141[v143[2]] = v141[v143[3]] + v141[v143[4]];
																										end
																									elseif (v144 <= 4) then
																										if (v144 == (12 - 9)) then
																											local v203 = 0;
																											local v204;
																											local v205;
																											local v206;
																											local v207;
																											while true do
																												if (v203 == 1) then
																													v206 = nil;
																													v207 = nil;
																													v203 = 2;
																												end
																												if (v203 == 0) then
																													v204 = 0;
																													v205 = nil;
																													v203 = 1;
																												end
																												if (v203 == 2) then
																													while true do
																														if (v204 == 0) then
																															local v542 = 0;
																															while true do
																																if (0 == v542) then
																																	v205 = v143[2];
																																	v206 = {v141[v205](v21(v141, v205 + 1, v136))};
																																	v542 = 1;
																																end
																																if (v542 == 1) then
																																	v204 = 1;
																																	break;
																																end
																															end
																														end
																														if (v204 == 1) then
																															v207 = 0 + 0;
																															for v592 = v205, v143[1 + 3] do
																																local v593 = 0;
																																local v594;
																																while true do
																																	if (v593 == 0) then
																																		v594 = 0;
																																		while true do
																																			if (0 == v594) then
																																				v207 = v207 + 1;
																																				v141[v592] = v206[v207];
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																													end
																													break;
																												end
																											end
																										else
																											v141[v143[959 - (892 + 65)]] = v141[v143[3]] + v141[v143[4]];
																										end
																									elseif (v144 > 5) then
																										local v209 = 0;
																										local v210;
																										local v211;
																										local v212;
																										while true do
																											if (v209 == 1) then
																												v212 = nil;
																												while true do
																													if (v210 == 0) then
																														local v543 = 0;
																														while true do
																															if (1 == v543) then
																																v210 = 1;
																																break;
																															end
																															if (v543 == 0) then
																																v211 = v143[2];
																																v212 = v141[v143[3]];
																																v543 = 1;
																															end
																														end
																													end
																													if (v210 == 1) then
																														v141[v211 + 1] = v212;
																														v141[v211] = v212[v143[4]];
																														break;
																													end
																												end
																												break;
																											end
																											if (v209 == 0) then
																												v210 = 0;
																												v211 = nil;
																												v209 = 1;
																											end
																										end
																									else
																										v141[v143[2]] = v141[v143[7 - 4]] - v143[4];
																									end
																								elseif (v144 <= 9) then
																									if (v144 <= 7) then
																										local v175 = 0;
																										local v176;
																										local v177;
																										local v178;
																										while true do
																											if (v175 == 1) then
																												v178 = nil;
																												while true do
																													if (v176 == 1) then
																														for v529 = v177 + 1, v136 do
																															v15(v178, v141[v529]);
																														end
																														break;
																													end
																													if (v176 == 0) then
																														local v514 = 0;
																														while true do
																															if (v514 == 1) then
																																v176 = 1;
																																break;
																															end
																															if (v514 == 0) then
																																v177 = v143[2];
																																v178 = v141[v177];
																																v514 = 1;
																															end
																														end
																													end
																												end
																												break;
																											end
																											if (v175 == 0) then
																												v176 = 0;
																												v177 = nil;
																												v175 = 1;
																											end
																										end
																									elseif (v144 == 8) then
																										local v214 = 0;
																										local v215;
																										local v216;
																										local v217;
																										local v218;
																										while true do
																											if (2 == v214) then
																												while true do
																													if (v215 == 1) then
																														local v547 = 0;
																														while true do
																															if (v547 == 1) then
																																v215 = 2;
																																break;
																															end
																															if (v547 == 0) then
																																v218 = {};
																																v217 = v18({}, {[v7("\228\221\139\240\223\231\154", "\158\187\130\226")]=function(v684, v685)
																																	local v686 = 0;
																																	local v687;
																																	while true do
																																		if (0 == v686) then
																																			v687 = v218[v685];
																																			return v687[1][v687[2]];
																																		end
																																	end
																																end,[v7("\1\0\247\244\41\54\247\245\59\39", "\145\94\95\153")]=function(v688, v689, v690)
																																	local v691 = 0;
																																	local v692;
																																	local v693;
																																	while true do
																																		if (v691 == 0) then
																																			v692 = 0;
																																			v693 = nil;
																																			v691 = 1;
																																		end
																																		if (v691 == 1) then
																																			while true do
																																				if (v692 == 0) then
																																					v693 = v218[v689];
																																					v693[1][v693[2]] = v690;
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end});
																																v547 = 1;
																															end
																														end
																													end
																													if (v215 == 0) then
																														local v548 = 0;
																														while true do
																															if (v548 == 0) then
																																v216 = v132[v143[3]];
																																v217 = nil;
																																v548 = 1;
																															end
																															if (v548 == 1) then
																																v215 = 1;
																																break;
																															end
																														end
																													end
																													if (v215 == 2) then
																														for v597 = 1, v143[4] do
																															local v598 = 0;
																															local v599;
																															while true do
																																if (v598 == 1) then
																																	if (v599[1 - 0] == 72) then
																																		v218[v597 - 1] = {v141,v599[3]};
																																	else
																																		v218[v597 - 1] = {v70,v599[3]};
																																	end
																																	v140[#v140 + 1] = v218;
																																	break;
																																end
																																if (0 == v598) then
																																	v135 = v135 + 1;
																																	v599 = v131[v135];
																																	v598 = 1;
																																end
																															end
																														end
																														v141[v143[352 - (87 + 263)]] = v42(v216, v217, v71);
																														break;
																													end
																												end
																												break;
																											end
																											if (1 == v214) then
																												v217 = nil;
																												v218 = nil;
																												v214 = 2;
																											end
																											if (v214 == 0) then
																												v215 = 0;
																												v216 = nil;
																												v214 = 1;
																											end
																										end
																									else
																										v141[v143[182 - (67 + 113)]] = v70[v143[3]];
																									end
																								elseif (v144 <= 11) then
																									if (v144 > 10) then
																										v141[v143[2]] = v143[3];
																									elseif (v143[2] < v141[v143[4]]) then
																										v135 = v135 + 1;
																									else
																										v135 = v143[3];
																									end
																								elseif (v144 == 12) then
																									local v223 = 0;
																									local v224;
																									local v225;
																									local v226;
																									local v227;
																									local v228;
																									while true do
																										if (0 == v223) then
																											v224 = 0;
																											v225 = nil;
																											v223 = 1;
																										end
																										if (v223 == 2) then
																											v228 = nil;
																											while true do
																												if (v224 == 0) then
																													local v550 = 0;
																													while true do
																														if (v550 == 1) then
																															v224 = 1;
																															break;
																														end
																														if (v550 == 0) then
																															v225 = v143[2];
																															v226, v227 = v134(v141[v225](v21(v141, v225 + 1, v136)));
																															v550 = 1;
																														end
																													end
																												end
																												if (v224 == 1) then
																													local v551 = 0;
																													while true do
																														if (v551 == 0) then
																															v136 = (v227 + v225) - 1;
																															v228 = 0;
																															v551 = 1;
																														end
																														if (v551 == 1) then
																															v224 = 2;
																															break;
																														end
																													end
																												end
																												if (v224 == 2) then
																													for v600 = v225, v136 do
																														local v601 = 0;
																														while true do
																															if (v601 == 0) then
																																v228 = v228 + 1;
																																v141[v600] = v226[v228];
																																break;
																															end
																														end
																													end
																													break;
																												end
																											end
																											break;
																										end
																										if (v223 == 1) then
																											v226 = nil;
																											v227 = nil;
																											v223 = 2;
																										end
																									end
																								elseif (v143[2] == v141[v143[4]]) then
																									v135 = v135 + 1;
																								else
																									v135 = v143[3];
																								end
																							elseif (v144 <= 20) then
																								if (v144 <= 16) then
																									if (v144 <= 14) then
																										if (v141[v143[2]] == v141[v143[4]]) then
																											v135 = v135 + 1;
																										else
																											v135 = v143[3];
																										end
																									elseif (v144 > 15) then
																										do
																											return;
																										end
																									elseif (v141[v143[2]] == v141[v143[4]]) then
																										v135 = v135 + 1;
																									else
																										v135 = v143[3];
																									end
																								elseif (v144 <= 18) then
																									if (v144 > 17) then
																										v141[v143[2]] = #v141[v143[3]];
																									else
																										local v231 = 0;
																										local v232;
																										while true do
																											if (v231 == 0) then
																												v232 = v143[2];
																												do
																													return v21(v141, v232, v136);
																												end
																												break;
																											end
																										end
																									end
																								elseif (v144 == 19) then
																									for v441 = v143[2], v143[3] do
																										v141[v441] = nil;
																									end
																								else
																									local v233 = 0;
																									local v234;
																									local v235;
																									local v236;
																									while true do
																										if (v233 == 1) then
																											v236 = nil;
																											while true do
																												if (v234 == 1) then
																													for v602 = 1, #v140 do
																														local v603 = 0;
																														local v604;
																														local v605;
																														while true do
																															if (1 == v603) then
																																while true do
																																	if (v604 == 0) then
																																		v605 = v140[v602];
																																		for v731 = 0, #v605 do
																																			local v732 = 0;
																																			local v733;
																																			local v734;
																																			local v735;
																																			local v736;
																																			while true do
																																				if (v732 == 2) then
																																					while true do
																																						if (v733 == 0) then
																																							local v749 = 0;
																																							while true do
																																								if (v749 == 0) then
																																									v734 = v605[v731];
																																									v735 = v734[1];
																																									v749 = 1;
																																								end
																																								if (v749 == 1) then
																																									v733 = 1;
																																									break;
																																								end
																																							end
																																						end
																																						if (v733 == 1) then
																																							v736 = v734[2];
																																							if ((v735 == v141) and (v736 >= v235)) then
																																								local v751 = 0;
																																								while true do
																																									if (v751 == 0) then
																																										v236[v736] = v735[v736];
																																										v734[1] = v236;
																																										break;
																																									end
																																								end
																																							end
																																							break;
																																						end
																																					end
																																					break;
																																				end
																																				if (v732 == 1) then
																																					v735 = nil;
																																					v736 = nil;
																																					v732 = 2;
																																				end
																																				if (v732 == 0) then
																																					v733 = 0;
																																					v734 = nil;
																																					v732 = 1;
																																				end
																																			end
																																		end
																																		break;
																																	end
																																end
																																break;
																															end
																															if (v603 == 0) then
																																v604 = 0;
																																v605 = nil;
																																v603 = 1;
																															end
																														end
																													end
																													break;
																												end
																												if (v234 == 0) then
																													local v552 = 0;
																													while true do
																														if (0 == v552) then
																															v235 = v143[2];
																															v236 = {};
																															v552 = 1;
																														end
																														if (v552 == 1) then
																															v234 = 1;
																															break;
																														end
																													end
																												end
																											end
																											break;
																										end
																										if (0 == v233) then
																											v234 = 0;
																											v235 = nil;
																											v233 = 1;
																										end
																									end
																								end
																							elseif (v144 <= 24) then
																								if (v144 <= 22) then
																									if (v144 == 21) then
																										v141[v143[2]] = #v141[v143[3]];
																									elseif not v141[v143[2 + 0]] then
																										v135 = v135 + 1;
																									else
																										v135 = v143[3];
																									end
																								elseif (v144 == 23) then
																									v141[v143[2]] = v141[v143[3]][v141[v143[4]]];
																								else
																									v70[v143[3]] = v141[v143[2]];
																								end
																							elseif (v144 <= 26) then
																								if (v144 == 25) then
																									if (v143[2] == v141[v143[4]]) then
																										v135 = v135 + 1;
																									else
																										v135 = v143[3];
																									end
																								else
																									local v242 = 0;
																									local v243;
																									local v244;
																									local v245;
																									local v246;
																									while true do
																										if (v242 == 2) then
																											while true do
																												if (v243 == 0) then
																													local v553 = 0;
																													while true do
																														if (0 == v553) then
																															v244 = v143[2];
																															v245 = v141[v244 + 2];
																															v553 = 1;
																														end
																														if (v553 == 1) then
																															v243 = 1;
																															break;
																														end
																													end
																												end
																												if (v243 == 2) then
																													if (v245 > 0) then
																														if (v246 <= v141[v244 + 1]) then
																															local v698 = 0;
																															local v699;
																															while true do
																																if (v698 == 0) then
																																	v699 = 0;
																																	while true do
																																		if (0 == v699) then
																																			v135 = v143[3];
																																			v141[v244 + 3] = v246;
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																													elseif (v246 >= v141[v244 + 1]) then
																														local v700 = 0;
																														while true do
																															if (0 == v700) then
																																v135 = v143[3];
																																v141[v244 + 3] = v246;
																																break;
																															end
																														end
																													end
																													break;
																												end
																												if (v243 == 1) then
																													local v554 = 0;
																													while true do
																														if (v554 == 0) then
																															v246 = v141[v244] + v245;
																															v141[v244] = v246;
																															v554 = 1;
																														end
																														if (v554 == 1) then
																															v243 = 2;
																															break;
																														end
																													end
																												end
																											end
																											break;
																										end
																										if (v242 == 1) then
																											v245 = nil;
																											v246 = nil;
																											v242 = 2;
																										end
																										if (0 == v242) then
																											v243 = 0;
																											v244 = nil;
																											v242 = 1;
																										end
																									end
																								end
																							elseif (v144 == 27) then
																								if (v141[v143[2]] ~= v143[4]) then
																									v135 = v135 + (2 - 1);
																								else
																									v135 = v143[3];
																								end
																							else
																								v141[v143[2]] = v141[v143[3]][v143[4]];
																							end
																						elseif (v144 <= 43) then
																							if (v144 <= 35) then
																								if (v144 <= 31) then
																									if (v144 <= 29) then
																										v141[v143[2]] = v42(v132[v143[3]], nil, v71);
																									elseif (v144 > 30) then
																										v141[v143[2]] = v71[v143[3]];
																									else
																										local v251 = 0;
																										local v252;
																										while true do
																											if (v251 == 0) then
																												v252 = v143[2];
																												do
																													return v141[v252](v21(v141, v252 + 1 + 0, v143[11 - 8]));
																												end
																												break;
																											end
																										end
																									end
																								elseif (v144 <= 33) then
																									if (v144 > 32) then
																										local v253 = 0;
																										local v254;
																										local v255;
																										local v256;
																										local v257;
																										while true do
																											if (v253 == 1) then
																												v136 = (v256 + v254) - 1;
																												v257 = 0;
																												v253 = 2;
																											end
																											if (v253 == 0) then
																												v254 = v143[2];
																												v255, v256 = v134(v141[v254](v21(v141, v254 + 1, v143[3])));
																												v253 = 1;
																											end
																											if (v253 == 2) then
																												for v515 = v254, v136 do
																													local v516 = 0;
																													while true do
																														if (v516 == 0) then
																															v257 = v257 + 1;
																															v141[v515] = v255[v257];
																															break;
																														end
																													end
																												end
																												break;
																											end
																										end
																									else
																										v141[v143[2]][v143[3]] = v143[4];
																									end
																								elseif (v144 > 34) then
																									if not v141[v143[2]] then
																										v135 = v135 + 1;
																									else
																										v135 = v143[3];
																									end
																								else
																									local v260 = 0;
																									local v261;
																									while true do
																										if (v260 == 0) then
																											v261 = v143[2];
																											do
																												return v21(v141, v261, v261 + v143[3]);
																											end
																											break;
																										end
																									end
																								end
																							elseif (v144 <= 39) then
																								if (v144 <= (989 - (802 + 150))) then
																									if (v144 == 36) then
																										do
																											return v141[v143[2]];
																										end
																									elseif (v143[2] <= v141[v143[4]]) then
																										v135 = v135 + 1;
																									else
																										v135 = v143[3];
																									end
																								elseif (v144 > 38) then
																									local v262 = 0;
																									local v263;
																									local v264;
																									local v265;
																									while true do
																										if (v262 == 1) then
																											v265 = v141[v263 + 2];
																											if (v265 > 0) then
																												if (v264 > v141[v263 + 1]) then
																													v135 = v143[3];
																												else
																													v141[v263 + 3] = v264;
																												end
																											elseif (v264 < v141[v263 + 1]) then
																												v135 = v143[3];
																											else
																												v141[v263 + 3] = v264;
																											end
																											break;
																										end
																										if (v262 == 0) then
																											v263 = v143[2];
																											v264 = v141[v263];
																											v262 = 1;
																										end
																									end
																								else
																									local v266 = 0;
																									local v267;
																									while true do
																										if (0 == v266) then
																											v267 = v143[2];
																											v141[v267](v21(v141, v267 + 1, v143[3]));
																											break;
																										end
																									end
																								end
																							elseif (v144 <= 41) then
																								if (v144 > 40) then
																									v141[v143[2]] = v141[v143[3]][v143[4]];
																								else
																									v141[v143[2]] = v141[v143[3]];
																								end
																							elseif (v144 == 42) then
																								if (v141[v143[2]] == v143[4]) then
																									v135 = v135 + 1;
																								else
																									v135 = v143[7 - 4];
																								end
																							else
																								v141[v143[2]] = v141[v143[3]] - v143[4];
																							end
																						elseif (v144 <= 50) then
																							if (v144 <= 46) then
																								if (v144 <= 44) then
																									v71[v143[3]] = v141[v143[2]];
																								elseif (v144 == 45) then
																									local v273 = 0;
																									local v274;
																									local v275;
																									while true do
																										if (v273 == 0) then
																											v274 = 0;
																											v275 = nil;
																											v273 = 1;
																										end
																										if (v273 == 1) then
																											while true do
																												if (v274 == 0) then
																													v275 = v143[2];
																													v141[v275] = v141[v275](v21(v141, v275 + 1, v143[3]));
																													break;
																												end
																											end
																											break;
																										end
																									end
																								else
																									v141[v143[2]] = {};
																								end
																							elseif (v144 <= 48) then
																								if (v144 > (84 - 37)) then
																									local v277 = 0;
																									local v278;
																									local v279;
																									while true do
																										if (0 == v277) then
																											v278 = 0;
																											v279 = nil;
																											v277 = 1;
																										end
																										if (v277 == 1) then
																											while true do
																												if (v278 == 0) then
																													v279 = v143[2];
																													v141[v279](v21(v141, v279 + 1, v143[3]));
																													break;
																												end
																											end
																											break;
																										end
																									end
																								elseif (v141[v143[2]] ~= v143[4]) then
																									v135 = v135 + 1;
																								else
																									v135 = v143[3 + 0];
																								end
																							elseif (v144 > 49) then
																								v141[v143[2]] = v141[v143[3]] % v143[4];
																							else
																								v70[v143[1000 - (915 + 82)]] = v141[v143[2]];
																							end
																						elseif (v144 <= 54) then
																							if (v144 <= 52) then
																								if (v144 == 51) then
																									local v283 = 0;
																									local v284;
																									local v285;
																									local v286;
																									while true do
																										if (v283 == 1) then
																											v286 = nil;
																											while true do
																												if (0 == v284) then
																													local v558 = 0;
																													while true do
																														if (v558 == 0) then
																															v285 = v143[3];
																															v286 = v141[v285];
																															v558 = 1;
																														end
																														if (v558 == 1) then
																															v284 = 1;
																															break;
																														end
																													end
																												end
																												if (v284 == 1) then
																													for v612 = v285 + 1, v143[4] do
																														v286 = v286 .. v141[v612];
																													end
																													v141[v143[2]] = v286;
																													break;
																												end
																											end
																											break;
																										end
																										if (v283 == 0) then
																											v284 = 0;
																											v285 = nil;
																											v283 = 1;
																										end
																									end
																								else
																									local v287 = 0;
																									local v288;
																									local v289;
																									while true do
																										if (v287 == 0) then
																											v288 = 0;
																											v289 = nil;
																											v287 = 1;
																										end
																										if (1 == v287) then
																											while true do
																												if (v288 == 0) then
																													v289 = v143[2];
																													do
																														return v21(v141, v289, v136);
																													end
																													break;
																												end
																											end
																											break;
																										end
																									end
																								end
																							elseif (v144 > 53) then
																								v141[v143[2]] = v143[3];
																							else
																								local v292 = 0;
																								local v293;
																								local v294;
																								while true do
																									if (v292 == 1) then
																										while true do
																											if (v293 == 0) then
																												v294 = v143[2];
																												do
																													return v141[v294](v21(v141, v294 + 1, v143[3]));
																												end
																												break;
																											end
																										end
																										break;
																									end
																									if (0 == v292) then
																										v293 = 0;
																										v294 = nil;
																										v292 = 1;
																									end
																								end
																							end
																						elseif (v144 <= (158 - 102)) then
																							if (v144 > 55) then
																								v141[v143[2 + 0]] = v141[v143[3]] + v143[4];
																							else
																								local v296 = 0;
																								local v297;
																								while true do
																									if (v296 == 0) then
																										v297 = v143[2];
																										v141[v297] = v141[v297](v141[v297 + (1 - 0)]);
																										break;
																									end
																								end
																							end
																						elseif (v144 == 57) then
																							local v298 = 0;
																							local v299;
																							local v300;
																							local v301;
																							local v302;
																							local v303;
																							while true do
																								if (v298 == 0) then
																									v299 = 0;
																									v300 = nil;
																									v298 = 1;
																								end
																								if (v298 == 2) then
																									v303 = nil;
																									while true do
																										if (v299 == 2) then
																											for v613 = v300, v136 do
																												local v614 = 0;
																												local v615;
																												while true do
																													if (v614 == 0) then
																														v615 = 0;
																														while true do
																															if (v615 == 0) then
																																v303 = v303 + (1 - 0);
																																v141[v613] = v301[v303];
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																											break;
																										end
																										if (v299 == 1) then
																											local v562 = 0;
																											while true do
																												if (v562 == 0) then
																													v136 = (v302 + v300) - 1;
																													v303 = 0 - 0;
																													v562 = 1;
																												end
																												if (1 == v562) then
																													v299 = 2;
																													break;
																												end
																											end
																										end
																										if (v299 == 0) then
																											local v563 = 0;
																											while true do
																												if (v563 == 0) then
																													v300 = v143[1189 - (1069 + 118)];
																													v301, v302 = v134(v141[v300](v141[v300 + 1]));
																													v563 = 1;
																												end
																												if (v563 == 1) then
																													v299 = 1;
																													break;
																												end
																											end
																										end
																									end
																									break;
																								end
																								if (v298 == 1) then
																									v301 = nil;
																									v302 = nil;
																									v298 = 2;
																								end
																							end
																						else
																							local v304 = 0;
																							local v305;
																							local v306;
																							while true do
																								if (v304 == 0) then
																									v305 = v143[2];
																									v306 = v141[v305];
																									v304 = 1;
																								end
																								if (v304 == 1) then
																									for v517 = v305 + 1 + 0, v143[3] do
																										v15(v306, v141[v517]);
																									end
																									break;
																								end
																							end
																						end
																					elseif (v144 <= (155 - 67)) then
																						if (v144 <= 73) then
																							if (v144 <= 65) then
																								if (v144 <= 61) then
																									if (v144 <= 59) then
																										local v182 = 0;
																										local v183;
																										local v184;
																										local v185;
																										while true do
																											if (v182 == 1) then
																												v185 = nil;
																												while true do
																													if (v183 == 1) then
																														for v530 = 1, #v140 do
																															local v531 = 0;
																															local v532;
																															while true do
																																if (v531 == 0) then
																																	v532 = v140[v530];
																																	for v661 = 791 - (368 + 423), #v532 do
																																		local v662 = 0;
																																		local v663;
																																		local v664;
																																		local v665;
																																		local v666;
																																		while true do
																																			if (v662 == 1) then
																																				v665 = nil;
																																				v666 = nil;
																																				v662 = 2;
																																			end
																																			if (v662 == 2) then
																																				while true do
																																					if (v663 == 1) then
																																						v666 = v664[2];
																																						if ((v665 == v141) and (v666 >= v184)) then
																																							local v745 = 0;
																																							local v746;
																																							while true do
																																								if (v745 == 0) then
																																									v746 = 0;
																																									while true do
																																										if (0 == v746) then
																																											v185[v666] = v665[v666];
																																											v664[1] = v185;
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																						break;
																																					end
																																					if (0 == v663) then
																																						local v738 = 0;
																																						while true do
																																							if (1 == v738) then
																																								v663 = 1;
																																								break;
																																							end
																																							if (v738 == 0) then
																																								v664 = v532[v661];
																																								v665 = v664[1];
																																								v738 = 1;
																																							end
																																						end
																																					end
																																				end
																																				break;
																																			end
																																			if (v662 == 0) then
																																				v663 = 0;
																																				v664 = nil;
																																				v662 = 1;
																																			end
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																														break;
																													end
																													if (v183 == 0) then
																														local v518 = 0;
																														while true do
																															if (1 == v518) then
																																v183 = 1;
																																break;
																															end
																															if (v518 == 0) then
																																v184 = v143[2 + 0];
																																v185 = {};
																																v518 = 1;
																															end
																														end
																													end
																												end
																												break;
																											end
																											if (v182 == 0) then
																												v183 = 0;
																												v184 = nil;
																												v182 = 1;
																											end
																										end
																									elseif (v144 == 60) then
																										local v307 = 0;
																										local v308;
																										local v309;
																										while true do
																											if (v307 == 0) then
																												v308 = 0;
																												v309 = nil;
																												v307 = 1;
																											end
																											if (1 == v307) then
																												while true do
																													if (v308 == 0) then
																														v309 = v143[2];
																														v141[v309] = v141[v309](v21(v141, v309 + 1, v136));
																														break;
																													end
																												end
																												break;
																											end
																										end
																									else
																										local v310 = 0;
																										local v311;
																										local v312;
																										local v313;
																										local v314;
																										while true do
																											if (v310 == 0) then
																												v311 = 0;
																												v312 = nil;
																												v310 = 1;
																											end
																											if (1 == v310) then
																												v313 = nil;
																												v314 = nil;
																												v310 = 2;
																											end
																											if (2 == v310) then
																												while true do
																													if (0 == v311) then
																														local v566 = 0;
																														while true do
																															if (v566 == 0) then
																																v312 = v143[2];
																																v313 = v141[v312];
																																v566 = 1;
																															end
																															if (v566 == 1) then
																																v311 = 1;
																																break;
																															end
																														end
																													end
																													if (v311 == 1) then
																														v314 = v143[3];
																														for v617 = 1, v314 do
																															v313[v617] = v141[v312 + v617];
																														end
																														break;
																													end
																												end
																												break;
																											end
																										end
																									end
																								elseif (v144 <= 63) then
																									if (v144 == (194 - 132)) then
																										v135 = v143[3];
																									else
																										local v316 = 0;
																										local v317;
																										local v318;
																										local v319;
																										local v320;
																										local v321;
																										while true do
																											if (1 == v316) then
																												v319 = nil;
																												v320 = nil;
																												v316 = 2;
																											end
																											if (v316 == 2) then
																												v321 = nil;
																												while true do
																													if (v317 == 0) then
																														local v568 = 0;
																														while true do
																															if (v568 == 0) then
																																v318 = v143[2];
																																v319, v320 = v134(v141[v318](v21(v141, v318 + 1, v136)));
																																v568 = 1;
																															end
																															if (v568 == 1) then
																																v317 = 1;
																																break;
																															end
																														end
																													end
																													if (1 == v317) then
																														local v569 = 0;
																														while true do
																															if (v569 == 1) then
																																v317 = 2;
																																break;
																															end
																															if (v569 == 0) then
																																v136 = (v320 + v318) - 1;
																																v321 = 18 - (10 + 8);
																																v569 = 1;
																															end
																														end
																													end
																													if (v317 == 2) then
																														for v620 = v318, v136 do
																															local v621 = 0;
																															local v622;
																															while true do
																																if (v621 == 0) then
																																	v622 = 0;
																																	while true do
																																		if (0 == v622) then
																																			v321 = v321 + 1;
																																			v141[v620] = v319[v321];
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																														break;
																													end
																												end
																												break;
																											end
																											if (v316 == 0) then
																												v317 = 0;
																												v318 = nil;
																												v316 = 1;
																											end
																										end
																									end
																								elseif (v144 > 64) then
																									v141[v143[2]][v141[v143[11 - 8]]] = v141[v143[4]];
																								else
																									local v324 = 0;
																									local v325;
																									local v326;
																									local v327;
																									local v328;
																									while true do
																										if (0 == v324) then
																											v325 = v143[2];
																											v326, v327 = v134(v141[v325](v141[v325 + 1]));
																											v324 = 1;
																										end
																										if (1 == v324) then
																											v136 = (v327 + v325) - 1;
																											v328 = 442 - (416 + 26);
																											v324 = 2;
																										end
																										if (v324 == 2) then
																											for v519 = v325, v136 do
																												local v520 = 0;
																												while true do
																													if (v520 == 0) then
																														v328 = v328 + 1;
																														v141[v519] = v326[v328];
																														break;
																													end
																												end
																											end
																											break;
																										end
																									end
																								end
																							elseif (v144 <= 69) then
																								if (v144 <= 67) then
																									if (v144 > 66) then
																										v141[v143[2]] = v143[3] ~= 0;
																									else
																										v141[v143[2]][v141[v143[3]]] = v143[12 - 8];
																									end
																								elseif (v144 == 68) then
																									v141[v143[2]][v143[3]] = v143[4];
																								else
																									local v334 = 0;
																									local v335;
																									local v336;
																									local v337;
																									local v338;
																									local v339;
																									while true do
																										if (v334 == 0) then
																											v335 = 0;
																											v336 = nil;
																											v334 = 1;
																										end
																										if (v334 == 2) then
																											v339 = nil;
																											while true do
																												if (v335 == 2) then
																													for v625 = v336, v136 do
																														local v626 = 0;
																														local v627;
																														while true do
																															if (v626 == 0) then
																																v627 = 0;
																																while true do
																																	if (v627 == 0) then
																																		v339 = v339 + 1;
																																		v141[v625] = v337[v339];
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																													break;
																												end
																												if (v335 == 0) then
																													local v570 = 0;
																													while true do
																														if (v570 == 0) then
																															v336 = v143[1 + 1];
																															v337, v338 = v134(v141[v336](v21(v141, v336 + (1 - 0), v143[3])));
																															v570 = 1;
																														end
																														if (v570 == 1) then
																															v335 = 1;
																															break;
																														end
																													end
																												end
																												if (v335 == 1) then
																													local v571 = 0;
																													while true do
																														if (v571 == 1) then
																															v335 = 2;
																															break;
																														end
																														if (0 == v571) then
																															v136 = (v338 + v336) - 1;
																															v339 = 0;
																															v571 = 1;
																														end
																													end
																												end
																											end
																											break;
																										end
																										if (v334 == 1) then
																											v337 = nil;
																											v338 = nil;
																											v334 = 2;
																										end
																									end
																								end
																							elseif (v144 <= 71) then
																								if (v144 == 70) then
																									local v340 = 0;
																									local v341;
																									local v342;
																									local v343;
																									local v344;
																									while true do
																										if (v340 == 2) then
																											while true do
																												if (v341 == 1) then
																													v344 = v143[3];
																													for v628 = 1, v344 do
																														v343[v628] = v141[v342 + v628];
																													end
																													break;
																												end
																												if (v341 == 0) then
																													local v573 = 0;
																													while true do
																														if (1 == v573) then
																															v341 = 1;
																															break;
																														end
																														if (v573 == 0) then
																															v342 = v143[2];
																															v343 = v141[v342];
																															v573 = 1;
																														end
																													end
																												end
																											end
																											break;
																										end
																										if (v340 == 1) then
																											v343 = nil;
																											v344 = nil;
																											v340 = 2;
																										end
																										if (v340 == 0) then
																											v341 = 0;
																											v342 = nil;
																											v340 = 1;
																										end
																									end
																								else
																									local v345 = 0;
																									local v346;
																									local v347;
																									local v348;
																									local v349;
																									while true do
																										if (0 == v345) then
																											v346 = 0;
																											v347 = nil;
																											v345 = 1;
																										end
																										if (v345 == 2) then
																											while true do
																												if (v346 == 0) then
																													local v574 = 0;
																													while true do
																														if (v574 == 1) then
																															v346 = 1;
																															break;
																														end
																														if (v574 == 0) then
																															v347 = v143[2];
																															v348 = {v141[v347](v141[v347 + 1])};
																															v574 = 1;
																														end
																													end
																												end
																												if (v346 == 1) then
																													v349 = 0;
																													for v631 = v347, v143[4] do
																														local v632 = 0;
																														local v633;
																														while true do
																															if (v632 == 0) then
																																v633 = 0;
																																while true do
																																	if (v633 == 0) then
																																		v349 = v349 + 1;
																																		v141[v631] = v348[v349];
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																													break;
																												end
																											end
																											break;
																										end
																										if (v345 == 1) then
																											v348 = nil;
																											v349 = nil;
																											v345 = 2;
																										end
																									end
																								end
																							elseif (v144 > 72) then
																								local v350 = 0;
																								local v351;
																								local v352;
																								while true do
																									if (1 == v350) then
																										while true do
																											if (v351 == 0) then
																												v352 = v143[2];
																												v141[v352] = v141[v352](v141[v352 + 1]);
																												break;
																											end
																										end
																										break;
																									end
																									if (v350 == 0) then
																										v351 = 0;
																										v352 = nil;
																										v350 = 1;
																									end
																								end
																							else
																								v141[v143[2]] = v141[v143[3]];
																							end
																						elseif (v144 <= 80) then
																							if (v144 <= 76) then
																								if (v144 <= (512 - (145 + 293))) then
																									v141[v143[2]][v143[3]] = v141[v143[4]];
																								elseif (v144 > 75) then
																									v141[v143[2]] = v71[v143[3]];
																								elseif (v143[2] < v141[v143[434 - (44 + 386)]]) then
																									v135 = v135 + 1;
																								else
																									v135 = v143[3];
																								end
																							elseif (v144 <= 78) then
																								if (v144 > 77) then
																									v71[v143[3]] = v141[v143[2]];
																								else
																									v141[v143[2]] = v143[3] + v141[v143[4]];
																								end
																							elseif (v144 > 79) then
																								if v141[v143[2]] then
																									v135 = v135 + (1487 - (998 + 488));
																								else
																									v135 = v143[3];
																								end
																							else
																								local v360 = 0;
																								local v361;
																								local v362;
																								local v363;
																								local v364;
																								while true do
																									if (v360 == 0) then
																										v361 = 0;
																										v362 = nil;
																										v360 = 1;
																									end
																									if (2 == v360) then
																										while true do
																											if (v361 == 0) then
																												local v577 = 0;
																												while true do
																													if (v577 == 0) then
																														v362 = v143[2];
																														v363 = v141[v362];
																														v577 = 1;
																													end
																													if (v577 == 1) then
																														v361 = 1;
																														break;
																													end
																												end
																											end
																											if (v361 == 1) then
																												v364 = v141[v362 + 2];
																												if (v364 > (0 + 0)) then
																													if (v363 > v141[v362 + 1]) then
																														v135 = v143[3];
																													else
																														v141[v362 + 3 + 0] = v363;
																													end
																												elseif (v363 < v141[v362 + 1]) then
																													v135 = v143[3];
																												else
																													v141[v362 + 3] = v363;
																												end
																												break;
																											end
																										end
																										break;
																									end
																									if (v360 == 1) then
																										v363 = nil;
																										v364 = nil;
																										v360 = 2;
																									end
																								end
																							end
																						elseif (v144 <= 84) then
																							if (v144 <= 82) then
																								if (v144 > 81) then
																									local v365 = 0;
																									local v366;
																									while true do
																										if (v365 == 0) then
																											v366 = v143[2];
																											v141[v366](v141[v366 + 1]);
																											break;
																										end
																									end
																								else
																									local v367 = 0;
																									local v368;
																									local v369;
																									local v370;
																									local v371;
																									local v372;
																									while true do
																										if (v367 == 1) then
																											v370 = v368 + (774 - (201 + 571));
																											v371 = {v141[v368](v141[v368 + 1], v141[v370])};
																											v367 = 2;
																										end
																										if (v367 == 3) then
																											if v372 then
																												local v533 = 0;
																												while true do
																													if (0 == v533) then
																														v141[v370] = v372;
																														v135 = v143[1141 - (116 + 1022)];
																														break;
																													end
																												end
																											else
																												v135 = v135 + 1;
																											end
																											break;
																										end
																										if (v367 == 0) then
																											v368 = v143[2];
																											v369 = v143[4];
																											v367 = 1;
																										end
																										if (v367 == 2) then
																											for v521 = 1, v369 do
																												v141[v370 + v521] = v371[v521];
																											end
																											v372 = v371[1];
																											v367 = 3;
																										end
																									end
																								end
																							elseif (v144 == 83) then
																								if v141[v143[2]] then
																									v135 = v135 + 1;
																								else
																									v135 = v143[3];
																								end
																							else
																								v141[v143[2]] = v143[3] + v141[v143[4]];
																							end
																						elseif (v144 <= 86) then
																							if (v144 == 85) then
																								v141[v143[2]] = v42(v132[v143[12 - 9]], nil, v71);
																							else
																								local v375 = 0;
																								local v376;
																								while true do
																									if (v375 == 0) then
																										v376 = v143[2];
																										v141[v376] = v141[v376](v21(v141, v376 + 1, v143[3]));
																										break;
																									end
																								end
																							end
																						elseif (v144 > 87) then
																							do
																								return;
																							end
																						else
																							v141[v143[2]] = v141[v143[2 + 1]] % v141[v143[4]];
																						end
																					elseif (v144 <= 103) then
																						if (v144 <= 95) then
																							if (v144 <= 91) then
																								if (v144 <= 89) then
																									local v188 = 0;
																									local v189;
																									local v190;
																									local v191;
																									while true do
																										if (1 == v188) then
																											v191 = {};
																											v190 = v18({}, {[v7("\194\242\29\219\74\178\229", "\215\157\173\116\181\46")]=function(v460, v461)
																												local v462 = 0;
																												local v463;
																												local v464;
																												while true do
																													if (v462 == 1) then
																														while true do
																															if (v463 == 0) then
																																local v644 = 0;
																																while true do
																																	if (v644 == 0) then
																																		v464 = v191[v461];
																																		return v464[1][v464[2]];
																																	end
																																end
																															end
																														end
																														break;
																													end
																													if (v462 == 0) then
																														v463 = 0;
																														v464 = nil;
																														v462 = 1;
																													end
																												end
																											end,[v7("\10\139\133\247\205\60\186\143\247\194", "\186\85\212\235\146")]=function(v465, v466, v467)
																												local v468 = 0;
																												local v469;
																												local v470;
																												while true do
																													if (v468 == 0) then
																														v469 = 0;
																														v470 = nil;
																														v468 = 1;
																													end
																													if (v468 == 1) then
																														while true do
																															if (v469 == 0) then
																																v470 = v191[v466];
																																v470[1][v470[2]] = v467;
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end});
																											v188 = 2;
																										end
																										if (v188 == 2) then
																											for v471 = 1, v143[14 - 10] do
																												local v472 = 0;
																												local v473;
																												while true do
																													if (v472 == 1) then
																														if (v473[1] == 72) then
																															v191[v471 - 1] = {v141,v473[3]};
																														else
																															v191[v471 - 1] = {v70,v473[3]};
																														end
																														v140[#v140 + 1] = v191;
																														break;
																													end
																													if (v472 == 0) then
																														v135 = v135 + 1;
																														v473 = v131[v135];
																														v472 = 1;
																													end
																												end
																											end
																											v141[v143[2]] = v42(v189, v190, v71);
																											break;
																										end
																										if (v188 == 0) then
																											v189 = v132[v143[3]];
																											v190 = nil;
																											v188 = 1;
																										end
																									end
																								elseif (v144 == 90) then
																									v141[v143[2]] = v70[v143[3]];
																								else
																									v141[v143[2]] = v141[v143[3]][v141[v143[4]]];
																								end
																							elseif (v144 <= 93) then
																								if (v144 == 92) then
																									local v382 = 0;
																									local v383;
																									while true do
																										if (v382 == 0) then
																											v383 = v143[2];
																											v141[v383](v141[v383 + 1]);
																											break;
																										end
																									end
																								else
																									local v384 = 0;
																									local v385;
																									local v386;
																									while true do
																										if (v384 == 0) then
																											v385 = v143[3];
																											v386 = v141[v385];
																											v384 = 1;
																										end
																										if (v384 == 1) then
																											for v524 = v385 + 1, v143[4] do
																												v386 = v386 .. v141[v524];
																											end
																											v141[v143[2]] = v386;
																											break;
																										end
																									end
																								end
																							elseif (v144 > 94) then
																								if (v143[2] <= v141[v143[4]]) then
																									v135 = v135 + 1;
																								else
																									v135 = v143[3];
																								end
																							else
																								v141[v143[2]]();
																							end
																						elseif (v144 <= 99) then
																							if (v144 <= (344 - 247)) then
																								if (v144 > 96) then
																									do
																										return v141[v143[2]];
																									end
																								else
																									local v387 = 0;
																									local v388;
																									local v389;
																									while true do
																										if (v387 == 0) then
																											v388 = v143[861 - (814 + 45)];
																											v389 = v141[v143[3]];
																											v387 = 1;
																										end
																										if (v387 == 1) then
																											v141[v388 + 1] = v389;
																											v141[v388] = v389[v143[4]];
																											break;
																										end
																									end
																								end
																							elseif (v144 == 98) then
																								v135 = v143[3];
																							else
																								v141[v143[2]]();
																							end
																						elseif (v144 <= 101) then
																							if (v144 == 100) then
																								v141[v143[2]] = {};
																							else
																								local v392 = 0;
																								local v393;
																								local v394;
																								while true do
																									if (v392 == 1) then
																										while true do
																											if (0 == v393) then
																												v394 = v143[2];
																												v141[v394] = v141[v394]();
																												break;
																											end
																										end
																										break;
																									end
																									if (v392 == 0) then
																										v393 = 0;
																										v394 = nil;
																										v392 = 1;
																									end
																								end
																							end
																						elseif (v144 == 102) then
																							local v395 = 0;
																							local v396;
																							local v397;
																							local v398;
																							while true do
																								if (v395 == 0) then
																									v396 = 0;
																									v397 = nil;
																									v395 = 1;
																								end
																								if (v395 == 1) then
																									v398 = nil;
																									while true do
																										if (v396 == 0) then
																											local v581 = 0;
																											while true do
																												if (v581 == 1) then
																													v396 = 1;
																													break;
																												end
																												if (v581 == 0) then
																													v397 = v143[2];
																													v398 = v141[v143[7 - 4]];
																													v581 = 1;
																												end
																											end
																										end
																										if (v396 == 1) then
																											v141[v397 + 1] = v398;
																											v141[v397] = v398[v141[v143[4]]];
																											break;
																										end
																									end
																									break;
																								end
																							end
																						else
																							local v399 = 0;
																							local v400;
																							local v401;
																							local v402;
																							local v403;
																							local v404;
																							while true do
																								if (v399 == 3) then
																									if v404 then
																										local v536 = 0;
																										while true do
																											if (v536 == 0) then
																												v141[v402] = v404;
																												v135 = v143[3];
																												break;
																											end
																										end
																									else
																										v135 = v135 + 1;
																									end
																									break;
																								end
																								if (v399 == 0) then
																									v400 = v143[1 + 1];
																									v401 = v143[4];
																									v399 = 1;
																								end
																								if (v399 == 2) then
																									for v525 = 1 + 0, v401 do
																										v141[v402 + v525] = v403[v525];
																									end
																									v404 = v403[1];
																									v399 = 3;
																								end
																								if (v399 == 1) then
																									v402 = v400 + 2;
																									v403 = {v141[v400](v141[v400 + 1], v141[v402])};
																									v399 = 2;
																								end
																							end
																						end
																					elseif (v144 <= 110) then
																						if (v144 <= 106) then
																							if (v144 <= (989 - (261 + 624))) then
																								local v192 = 0;
																								local v193;
																								local v194;
																								local v195;
																								local v196;
																								while true do
																									if (v192 == 1) then
																										v195 = nil;
																										v196 = nil;
																										v192 = 2;
																									end
																									if (v192 == 0) then
																										v193 = 0;
																										v194 = nil;
																										v192 = 1;
																									end
																									if (v192 == 2) then
																										while true do
																											if (v193 == 1) then
																												v196 = 0;
																												for v537 = v194, v143[1084 - (1020 + 60)] do
																													local v538 = 0;
																													local v539;
																													while true do
																														if (v538 == 0) then
																															v539 = 0;
																															while true do
																																if (v539 == 0) then
																																	v196 = v196 + 1;
																																	v141[v537] = v195[v196];
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																											if (v193 == 0) then
																												local v528 = 0;
																												while true do
																													if (v528 == 1) then
																														v193 = 1;
																														break;
																													end
																													if (v528 == 0) then
																														v194 = v143[2];
																														v195 = {v141[v194](v141[v194 + 1])};
																														v528 = 1;
																													end
																												end
																											end
																										end
																										break;
																									end
																								end
																							elseif (v144 == (1528 - (630 + 793))) then
																								v141[v143[2]] = v141[v143[3]] % v141[v143[4]];
																							else
																								local v406 = 0;
																								local v407;
																								local v408;
																								local v409;
																								local v410;
																								while true do
																									if (v406 == 0) then
																										v407 = 0;
																										v408 = nil;
																										v406 = 1;
																									end
																									if (v406 == 1) then
																										v409 = nil;
																										v410 = nil;
																										v406 = 2;
																									end
																									if (v406 == 2) then
																										while true do
																											if (v407 == 1) then
																												v410 = 0 - 0;
																												for v637 = v408, v143[4] do
																													local v638 = 0;
																													local v639;
																													while true do
																														if (v638 == 0) then
																															v639 = 0;
																															while true do
																																if (0 == v639) then
																																	v410 = v410 + 1;
																																	v141[v637] = v409[v410];
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																											if (v407 == 0) then
																												local v585 = 0;
																												while true do
																													if (v585 == 0) then
																														v408 = v143[2];
																														v409 = {v141[v408](v21(v141, v408 + 1, v136))};
																														v585 = 1;
																													end
																													if (v585 == 1) then
																														v407 = 1;
																														break;
																													end
																												end
																											end
																										end
																										break;
																									end
																								end
																							end
																						elseif (v144 <= 108) then
																							if (v144 == 107) then
																								local v411 = 0;
																								local v412;
																								local v413;
																								while true do
																									if (v411 == 0) then
																										v412 = 0;
																										v413 = nil;
																										v411 = 1;
																									end
																									if (v411 == 1) then
																										while true do
																											if (v412 == 0) then
																												v413 = v143[2];
																												v141[v413](v21(v141, v413 + (4 - 3), v136));
																												break;
																											end
																										end
																										break;
																									end
																								end
																							else
																								v141[v143[2]][v141[v143[3]]] = v141[v143[2 + 2]];
																							end
																						elseif (v144 == 109) then
																							local v416 = 0;
																							local v417;
																							local v418;
																							local v419;
																							local v420;
																							while true do
																								if (1 == v416) then
																									v419 = nil;
																									v420 = nil;
																									v416 = 2;
																								end
																								if (v416 == 2) then
																									while true do
																										if (v417 == 2) then
																											if (v419 > 0) then
																												if (v420 <= v141[v418 + 1]) then
																													local v705 = 0;
																													while true do
																														if (0 == v705) then
																															v135 = v143[3];
																															v141[v418 + (9 - 6)] = v420;
																															break;
																														end
																													end
																												end
																											elseif (v420 >= v141[v418 + 1]) then
																												local v706 = 0;
																												local v707;
																												while true do
																													if (v706 == 0) then
																														v707 = 0;
																														while true do
																															if (v707 == 0) then
																																v135 = v143[3];
																																v141[v418 + 3] = v420;
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																											break;
																										end
																										if (v417 == 1) then
																											local v587 = 0;
																											while true do
																												if (v587 == 0) then
																													v420 = v141[v418] + v419;
																													v141[v418] = v420;
																													v587 = 1;
																												end
																												if (v587 == 1) then
																													v417 = 2;
																													break;
																												end
																											end
																										end
																										if (v417 == 0) then
																											local v588 = 0;
																											while true do
																												if (v588 == 1) then
																													v417 = 1;
																													break;
																												end
																												if (v588 == 0) then
																													v418 = v143[2];
																													v419 = v141[v418 + 2];
																													v588 = 1;
																												end
																											end
																										end
																									end
																									break;
																								end
																								if (v416 == 0) then
																									v417 = 0;
																									v418 = nil;
																									v416 = 1;
																								end
																							end
																						else
																							v141[v143[2]][v141[v143[1750 - (760 + 987)]]] = v143[4];
																						end
																					elseif (v144 <= 114) then
																						if (v144 <= 112) then
																							if (v144 == 111) then
																								for v445 = v143[1915 - (1789 + 124)], v143[3] do
																									v141[v445] = nil;
																								end
																							else
																								v141[v143[2]] = v143[3] ~= 0;
																							end
																						elseif (v144 == 113) then
																							v141[v143[2]] = v141[v143[3]] + v143[4];
																						else
																							local v425 = 0;
																							local v426;
																							local v427;
																							while true do
																								if (v425 == 0) then
																									v426 = 0;
																									v427 = nil;
																									v425 = 1;
																								end
																								if (v425 == 1) then
																									while true do
																										if (v426 == 0) then
																											v427 = v143[2];
																											v141[v427] = v141[v427]();
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																					elseif (v144 <= (882 - (745 + 21))) then
																						if (v144 == 115) then
																							local v428 = 0;
																							local v429;
																							local v430;
																							while true do
																								if (v428 == 1) then
																									v141[v429 + 1] = v430;
																									v141[v429] = v430[v141[v143[4]]];
																									break;
																								end
																								if (v428 == 0) then
																									v429 = v143[1 + 1];
																									v430 = v141[v143[3]];
																									v428 = 1;
																								end
																							end
																						else
																							local v431 = 0;
																							local v432;
																							while true do
																								if (v431 == 0) then
																									v432 = v143[2];
																									v141[v432](v21(v141, v432 + (2 - 1), v136));
																									break;
																								end
																							end
																						end
																					elseif (v144 == 117) then
																						v141[v143[2]] = v141[v143[3]] % v143[4];
																					else
																						local v434 = 0;
																						local v435;
																						local v436;
																						local v437;
																						while true do
																							if (v434 == 1) then
																								v437 = nil;
																								while true do
																									if (v435 == 1) then
																										for v640 = v436 + 1, v136 do
																											v15(v437, v141[v640]);
																										end
																										break;
																									end
																									if (v435 == 0) then
																										local v591 = 0;
																										while true do
																											if (v591 == 0) then
																												v436 = v143[2];
																												v437 = v141[v436];
																												v591 = 1;
																											end
																											if (1 == v591) then
																												v435 = 1;
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																							if (v434 == 0) then
																								v435 = 0;
																								v436 = nil;
																								v434 = 1;
																							end
																						end
																					end
																					v135 = v135 + (3 - 2);
																					break;
																				end
																			end
																			break;
																		end
																	end
																end
																break;
															end
															if (v130 == 2) then
																v139 = v20("#", ...) - 1;
																v140 = {};
																v141 = {};
																for v147 = 0, v139 do
																	if (v147 >= v133) then
																		v137[v147 - v133] = v138[v147 + 1];
																	else
																		v141[v147] = v138[v147 + 1];
																	end
																end
																v130 = 3;
															end
														end
													end;
												end
											end
										end
										break;
									end
								end
							end
							break;
						end
					end
				end
				return v42(v41(), {}, v29)(...);
			end
			if (2 == v30) then
				function v35()
					local v77 = 0;
					local v78;
					local v79;
					local v80;
					while true do
						if (v77 == 0) then
							v78 = 0;
							v79 = nil;
							v77 = 1;
						end
						if (v77 == 1) then
							v80 = nil;
							while true do
								local v100 = 0;
								while true do
									if (v100 == 0) then
										if (v78 == 0) then
											local v114 = 0;
											while true do
												if (v114 == 1) then
													v78 = 1;
													break;
												end
												if (0 == v114) then
													v79, v80 = v9(v28, v31, v31 + 2);
													v31 = v31 + 2;
													v114 = 1;
												end
											end
										end
										if (v78 == 1) then
											return (v80 * 256) + v79;
										end
										break;
									end
								end
							end
							break;
						end
					end
				end
				v36 = nil;
				function v36()
					local v81 = 0;
					local v82;
					local v83;
					local v84;
					local v85;
					while true do
						if (v81 == 1) then
							return (v85 * 16777216) + (v84 * 65536) + (v83 * 256) + v82;
						end
						if (v81 == 0) then
							v82, v83, v84, v85 = v9(v28, v31, v31 + 3);
							v31 = v31 + 4;
							v81 = 1;
						end
					end
				end
				v37 = nil;
				v30 = 3;
			end
			if (v30 == 0) then
				v31 = 1;
				v32 = nil;
				v28 = v12(v11(v28, 15 - 10), v7("\124\152", "\34\82\182\224\78\136\109"), function(v86)
					if (v9(v86, 2) == 79) then
						local v92 = 0;
						while true do
							if (v92 == 0) then
								v32 = v8(v11(v86, 1, 1));
								return "";
							end
						end
					else
						local v93 = 0;
						local v94;
						while true do
							if (v93 == 0) then
								v94 = v10(v8(v86, 16));
								if v32 then
									local v104 = 0;
									local v105;
									while true do
										if (1 == v104) then
											return v105;
										end
										if (v104 == 0) then
											v105 = v13(v94, v32);
											v32 = nil;
											v104 = 1;
										end
									end
								else
									return v94;
								end
								break;
							end
						end
					end
				end);
				v33 = nil;
				v30 = 1;
			end
		end
	end
	vv17(), ...);
end
