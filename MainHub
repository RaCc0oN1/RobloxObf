do
	local v0 = string.char;
	local v1 = string.byte;
	local v2 = string.sub;
	local v3 = bit32 or bit;
	local v4 = v3.bxor;
	local v5 = table.concat;
	local v6 = table.insert;
	local function v7(v24, v25)
		local v26 = 0;
		local v27;
		while true do
			if (v26 == 1) then
				return v5(v27);
			end
			if (v26 == 0) then
				v27 = {};
				for v44 = 1, #v24 do
					v6(v27, v0(v4(v1(v2(v24, v44, v44 + 1)), v1(v2(v25, 1 + (v44 % #v25), 1 + (v44 % #v25) + 1))) % 256));
				end
				v26 = 1;
			end
		end
	end
	local v8 = tonumber;
	local v9 = string.byte;
	local v10 = string.char;
	local v11 = string.sub;
	local v12 = string.gsub;
	local v13 = string.rep;
	local v14 = table.concat;
	local v15 = table.insert;
	local v16 = math.ldexp;
	local v17 = getfenv or function()
		return _ENV;
	end;
	local v18 = setmetatable;
	local v19 = pcall;
	local v20 = select;
	local v21 = unpack or table.unpack;
	local v22 = tonumber;
	local function v23(v28, v29, ...)
		local v30 = 0;
		local v31;
		local v32;
		local v33;
		local v34;
		local v35;
		local v36;
		local v37;
		local v38;
		local v39;
		local v40;
		local v41;
		local v42;
		local v43;
		while true do
			if (v30 == 1) then
				v35 = nil;
				v36 = nil;
				v37 = nil;
				v38 = nil;
				v30 = 2;
			end
			if (2 == v30) then
				v39 = nil;
				v40 = nil;
				v41 = nil;
				v42 = nil;
				v30 = 3;
			end
			if (v30 == 0) then
				v31 = 0;
				v32 = nil;
				v33 = nil;
				v34 = nil;
				v30 = 1;
			end
			if (v30 == 3) then
				v43 = nil;
				while true do
					local v45 = 0;
					while true do
						if (2 == v45) then
							if (v31 == 4) then
								local v46 = 0;
								while true do
									if (v46 == 0) then
										function v38()
											local v54 = 0;
											local v55;
											local v56;
											local v57;
											local v58;
											local v59;
											local v60;
											local v61;
											while true do
												if (v54 == 1) then
													v57 = nil;
													v58 = nil;
													v54 = 2;
												end
												if (v54 == 3) then
													v61 = nil;
													while true do
														local v112 = 0;
														while true do
															if (v112 == 0) then
																if (v55 == 2) then
																	local v150 = 0;
																	while true do
																		if (v150 == 0) then
																			v60 = v34(v57, 53 - 32, 31);
																			v61 = ((v34(v57, 32) == 1) and -(620 - (555 + 64))) or 1;
																			v150 = 1;
																		end
																		if (v150 == 1) then
																			v55 = 3;
																			break;
																		end
																	end
																end
																if (v55 == 1) then
																	local v151 = 0;
																	while true do
																		if (v151 == 0) then
																			v58 = 1;
																			v59 = (v34(v57, 1, 20) * (2 ^ 32)) + v56;
																			v151 = 1;
																		end
																		if (v151 == 1) then
																			v55 = 2;
																			break;
																		end
																	end
																end
																v112 = 1;
															end
															if (v112 == 1) then
																if (v55 == 3) then
																	local v152 = 0;
																	while true do
																		if (v152 == 0) then
																			if (v60 == 0) then
																				if (v59 == 0) then
																					return v61 * (931 - (857 + 74));
																				else
																					local v177 = 0;
																					while true do
																						if (v177 == 0) then
																							v60 = 1;
																							v58 = 0;
																							break;
																						end
																					end
																				end
																			elseif (v60 == 2047) then
																				return ((v59 == 0) and (v61 * (1 / 0))) or (v61 * NaN);
																			end
																			return v16(v61, v60 - 1023) * (v58 + (v59 / (2 ^ 52)));
																		end
																	end
																end
																if (v55 == 0) then
																	local v153 = 0;
																	while true do
																		if (v153 == 1) then
																			v55 = 1;
																			break;
																		end
																		if (v153 == 0) then
																			v56 = v37();
																			v57 = v37();
																			v153 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (v54 == 0) then
													v55 = 0;
													v56 = nil;
													v54 = 1;
												end
												if (v54 == 2) then
													v59 = nil;
													v60 = nil;
													v54 = 3;
												end
											end
										end
										v39 = nil;
										v46 = 1;
									end
									if (v46 == 1) then
										function v39(v62)
											local v63 = 0;
											local v64;
											local v65;
											while true do
												if (v63 == 3) then
													return v14(v65);
												end
												if (v63 == 1) then
													v64 = v11(v28, v32, (v32 + v62) - (569 - (367 + 201)));
													v32 = v32 + v62;
													v63 = 2;
												end
												if (v63 == 0) then
													v64 = nil;
													if not v62 then
														local v143 = 0;
														while true do
															if (v143 == 0) then
																v62 = v37();
																if (v62 == 0) then
																	return "";
																end
																break;
															end
														end
													end
													v63 = 1;
												end
												if (v63 == 2) then
													v65 = {};
													for v113 = 1, #v64 do
														v65[v113] = v10(v9(v11(v64, v113, v113)));
													end
													v63 = 3;
												end
											end
										end
										v31 = 5;
										break;
									end
								end
							end
							if (v31 == 5) then
								local v47 = 0;
								while true do
									if (v47 == 1) then
										function v41(...)
											return {...}, v20("#", ...);
										end
										v31 = 6;
										break;
									end
									if (0 == v47) then
										v40 = v37;
										v41 = nil;
										v47 = 1;
									end
								end
							end
							v45 = 3;
						end
						if (v45 == 3) then
							if (v31 == 2) then
								local v48 = 0;
								while true do
									if (v48 == 0) then
										function v35()
											local v66 = 0;
											local v67;
											local v68;
											while true do
												if (v66 == 1) then
													while true do
														local v115 = 0;
														while true do
															if (v115 == 0) then
																if (v67 == 0) then
																	local v154 = 0;
																	while true do
																		if (v154 == 0) then
																			v68 = v9(v28, v32, v32);
																			v32 = v32 + 1;
																			v154 = 1;
																		end
																		if (v154 == 1) then
																			v67 = 1;
																			break;
																		end
																	end
																end
																if (1 == v67) then
																	return v68;
																end
																break;
															end
														end
													end
													break;
												end
												if (v66 == 0) then
													v67 = 0;
													v68 = nil;
													v66 = 1;
												end
											end
										end
										v36 = nil;
										v48 = 1;
									end
									if (v48 == 1) then
										function v36()
											local v69 = 0;
											local v70;
											local v71;
											local v72;
											while true do
												if (v69 == 1) then
													v72 = nil;
													while true do
														local v116 = 0;
														while true do
															if (v116 == 0) then
																if (v70 == 0) then
																	local v155 = 0;
																	while true do
																		if (v155 == 0) then
																			v71, v72 = v9(v28, v32, v32 + 2);
																			v32 = v32 + 2;
																			v155 = 1;
																		end
																		if (v155 == 1) then
																			v70 = 1;
																			break;
																		end
																	end
																end
																if (v70 == 1) then
																	return (v72 * 256) + v71;
																end
																break;
															end
														end
													end
													break;
												end
												if (v69 == 0) then
													v70 = 0;
													v71 = nil;
													v69 = 1;
												end
											end
										end
										v31 = 3;
										break;
									end
								end
							end
							if (v31 == 0) then
								local v49 = 0;
								while true do
									if (v49 == 1) then
										v28 = v12(v11(v28, 5), v7("\230\10", "\237\200\36\176\214\213\134\163"), function(v73)
											if (v9(v73, 2) == 79) then
												local v97 = 0;
												local v98;
												while true do
													if (v97 == 0) then
														v98 = 0;
														while true do
															if (v98 == 0) then
																local v144 = 0;
																while true do
																	if (v144 == 0) then
																		v33 = v8(v11(v73, 1, 2 - 1));
																		return "";
																	end
																end
															end
														end
														break;
													end
												end
											else
												local v99 = 0;
												local v100;
												local v101;
												while true do
													if (1 == v99) then
														while true do
															if (v100 == 0) then
																v101 = v10(v8(v73, 16));
																if v33 then
																	local v162 = 0;
																	local v163;
																	local v164;
																	while true do
																		if (v162 == 0) then
																			v163 = 0;
																			v164 = nil;
																			v162 = 1;
																		end
																		if (v162 == 1) then
																			while true do
																				local v171 = 0;
																				while true do
																					if (v171 == 0) then
																						if (1 == v163) then
																							return v164;
																						end
																						if (v163 == 0) then
																							local v182 = 0;
																							while true do
																								if (v182 == 0) then
																									v164 = v13(v101, v33);
																									v33 = nil;
																									v182 = 1;
																								end
																								if (v182 == 1) then
																									v163 = 1;
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																	end
																else
																	return v101;
																end
																break;
															end
														end
														break;
													end
													if (v99 == 0) then
														v100 = 0;
														v101 = nil;
														v99 = 1;
													end
												end
											end
										end);
										v31 = 1;
										break;
									end
									if (v49 == 0) then
										v32 = 1;
										v33 = nil;
										v49 = 1;
									end
								end
							end
							break;
						end
						if (v45 == 0) then
							if (6 == v31) then
								local v50 = 0;
								while true do
									if (v50 == 1) then
										v43 = nil;
										v31 = 7;
										break;
									end
									if (v50 == 0) then
										v42 = nil;
										function v42()
											local v74 = 0;
											local v75;
											local v76;
											local v77;
											local v78;
											local v79;
											local v80;
											while true do
												if (v74 == 1) then
													v78 = {v75,v76,nil,v77};
													v79 = v37();
													v80 = {};
													v74 = 2;
												end
												if (v74 == 2) then
													for v117 = 1, v79 do
														local v118 = 0;
														local v119;
														local v120;
														local v121;
														while true do
															if (v118 == 0) then
																v119 = 0;
																v120 = nil;
																v118 = 1;
															end
															if (v118 == 1) then
																v121 = nil;
																while true do
																	if (v119 == 1) then
																		if (v120 == 1) then
																			v121 = v35() ~= 0;
																		elseif (v120 == 2) then
																			v121 = v38();
																		elseif (v120 == 3) then
																			v121 = v39();
																		end
																		v80[v117] = v121;
																		break;
																	end
																	if (v119 == 0) then
																		local v166 = 0;
																		while true do
																			if (v166 == 0) then
																				v120 = v35();
																				v121 = nil;
																				v166 = 1;
																			end
																			if (v166 == 1) then
																				v119 = 1;
																				break;
																			end
																		end
																	end
																end
																break;
															end
														end
													end
													v78[3] = v35();
													for v122 = 1, v37() do
														local v123 = 0;
														local v124;
														while true do
															if (v123 == 0) then
																v124 = v35();
																if (v34(v124, 1, 1) == 0) then
																	local v156 = 0;
																	local v157;
																	local v158;
																	local v159;
																	local v160;
																	while true do
																		if (v156 == 1) then
																			v159 = nil;
																			v160 = nil;
																			v156 = 2;
																		end
																		if (v156 == 0) then
																			v157 = 0;
																			v158 = nil;
																			v156 = 1;
																		end
																		if (v156 == 2) then
																			while true do
																				if (v157 == 1) then
																					local v173 = 0;
																					while true do
																						if (v173 == 1) then
																							v157 = 2;
																							break;
																						end
																						if (0 == v173) then
																							v160 = {v36(),v36(),nil,nil};
																							if (v158 == 0) then
																								local v183 = 0;
																								while true do
																									if (v183 == 0) then
																										v160[3] = v36();
																										v160[4] = v36();
																										break;
																									end
																								end
																							elseif (v158 == 1) then
																								v160[3] = v37();
																							elseif (v158 == 2) then
																								v160[3] = v37() - (2 ^ 16);
																							elseif (v158 == 3) then
																								local v192 = 0;
																								while true do
																									if (v192 == 0) then
																										v160[3] = v37() - ((929 - (214 + 713)) ^ 16);
																										v160[4] = v36();
																										break;
																									end
																								end
																							end
																							v173 = 1;
																						end
																					end
																				end
																				if (2 == v157) then
																					local v174 = 0;
																					while true do
																						if (v174 == 0) then
																							if (v34(v159, 1, 1) == (1 + 0)) then
																								v160[2] = v80[v160[1 + 1]];
																							end
																							if (v34(v159, 2, 2) == 1) then
																								v160[3] = v80[v160[3]];
																							end
																							v174 = 1;
																						end
																						if (v174 == 1) then
																							v157 = 3;
																							break;
																						end
																					end
																				end
																				if (v157 == 3) then
																					if (v34(v159, 3, 3) == 1) then
																						v160[4] = v80[v160[4]];
																					end
																					v75[v122] = v160;
																					break;
																				end
																				if (v157 == 0) then
																					local v176 = 0;
																					while true do
																						if (v176 == 1) then
																							v157 = 1;
																							break;
																						end
																						if (v176 == 0) then
																							v158 = v34(v124, 2, 3);
																							v159 = v34(v124, 4, 6);
																							v176 = 1;
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																end
																break;
															end
														end
													end
													v74 = 3;
												end
												if (3 == v74) then
													for v125 = 1, v37() do
														v76[v125 - 1] = v42();
													end
													return v78;
												end
												if (v74 == 0) then
													v75 = {};
													v76 = {};
													v77 = {};
													v74 = 1;
												end
											end
										end
										v50 = 1;
									end
								end
							end
							if (v31 == 3) then
								local v51 = 0;
								while true do
									if (0 == v51) then
										v37 = nil;
										function v37()
											local v81 = 0;
											local v82;
											local v83;
											local v84;
											local v85;
											local v86;
											while true do
												if (v81 == 2) then
													v86 = nil;
													while true do
														local v127 = 0;
														while true do
															if (v127 == 0) then
																if (v82 == 0) then
																	local v161 = 0;
																	while true do
																		if (v161 == 1) then
																			v82 = 1;
																			break;
																		end
																		if (v161 == 0) then
																			v83, v84, v85, v86 = v9(v28, v32, v32 + 3);
																			v32 = v32 + 4;
																			v161 = 1;
																		end
																	end
																end
																if (1 == v82) then
																	return (v86 * 16777216) + (v85 * 65536) + (v84 * 256) + v83;
																end
																break;
															end
														end
													end
													break;
												end
												if (0 == v81) then
													v82 = 0;
													v83 = nil;
													v81 = 1;
												end
												if (v81 == 1) then
													v84 = nil;
													v85 = nil;
													v81 = 2;
												end
											end
										end
										v51 = 1;
									end
									if (1 == v51) then
										v38 = nil;
										v31 = 4;
										break;
									end
								end
							end
							v45 = 1;
						end
						if (v45 == 1) then
							if (v31 == 1) then
								local v52 = 0;
								while true do
									if (v52 == 1) then
										v35 = nil;
										v31 = 2;
										break;
									end
									if (v52 == 0) then
										v34 = nil;
										function v34(v87, v88, v89)
											if v89 then
												local v102 = 0;
												local v103;
												local v104;
												while true do
													if (v102 == 1) then
														while true do
															if (v103 == 0) then
																local v145 = 0;
																while true do
																	if (v145 == 0) then
																		v104 = (v87 / (2 ^ (v88 - (2 - 1)))) % ((3 - 1) ^ (((v89 - 1) - (v88 - 1)) + 1));
																		return v104 - (v104 % 1);
																	end
																end
															end
														end
														break;
													end
													if (v102 == 0) then
														v103 = 0;
														v104 = nil;
														v102 = 1;
													end
												end
											else
												local v105 = 0;
												local v106;
												local v107;
												while true do
													if (v105 == 1) then
														while true do
															if (v106 == 0) then
																local v146 = 0;
																while true do
																	if (v146 == 0) then
																		v107 = 2 ^ (v88 - 1);
																		return (((v87 % (v107 + v107)) >= v107) and 1) or 0;
																	end
																end
															end
														end
														break;
													end
													if (v105 == 0) then
														v106 = 0;
														v107 = nil;
														v105 = 1;
													end
												end
											end
										end
										v52 = 1;
									end
								end
							end
							if (v31 == 7) then
								local v53 = 0;
								while true do
									if (v53 == 0) then
										function v43(v90, v91, v92)
											local v93 = 0;
											local v94;
											local v95;
											local v96;
											while true do
												if (v93 == 0) then
													v94 = v90[878 - (282 + 595)];
													v95 = v90[2];
													v93 = 1;
												end
												if (v93 == 1) then
													v96 = v90[3];
													return function(...)
														local v128 = 0;
														local v129;
														local v130;
														local v131;
														local v132;
														local v133;
														local v134;
														local v135;
														local v136;
														local v137;
														local v138;
														local v139;
														local v140;
														local v141;
														local v142;
														while true do
															if (v128 == 1) then
																v133 = 1;
																v134 = -1;
																v135 = {};
																v136 = {...};
																v128 = 2;
															end
															if (v128 == 2) then
																v137 = v20("#", ...) - 1;
																v138 = {};
																v139 = {};
																for v147 = 0, v137 do
																	if (v147 >= v131) then
																		v135[v147 - v131] = v136[v147 + 1];
																	else
																		v139[v147] = v136[v147 + 1];
																	end
																end
																v128 = 3;
															end
															if (v128 == 0) then
																v129 = v94;
																v130 = v95;
																v131 = v96;
																v132 = v41;
																v128 = 1;
															end
															if (v128 == 3) then
																v140 = (v137 - v131) + 1;
																v141 = nil;
																v142 = nil;
																while true do
																	local v148 = 0;
																	local v149;
																	while true do
																		if (v148 == 0) then
																			v149 = 0;
																			while true do
																				if (v149 == 1) then
																					if (v142 <= (53 + 5)) then
																						if (v142 <= (39 - 11)) then
																							if (v142 <= 13) then
																								if (v142 <= (1071 - (68 + 997))) then
																									if (v142 <= (1272 - (226 + 1044))) then
																										if (v142 <= 0) then
																											local v193 = 0;
																											local v194;
																											local v195;
																											while true do
																												if (v193 == 0) then
																													v194 = 0;
																													v195 = nil;
																													v193 = 1;
																												end
																												if (v193 == 1) then
																													while true do
																														if (v194 == 0) then
																															v195 = v141[2];
																															v139[v195] = v139[v195](v21(v139, v195 + 1, v141[3]));
																															break;
																														end
																													end
																													break;
																												end
																											end
																										elseif (v142 == 1) then
																											do
																												return;
																											end
																										else
																											local v225 = 0;
																											local v226;
																											local v227;
																											local v228;
																											local v229;
																											while true do
																												if (v225 == 0) then
																													v226 = 0;
																													v227 = nil;
																													v225 = 1;
																												end
																												if (v225 == 1) then
																													v228 = nil;
																													v229 = nil;
																													v225 = 2;
																												end
																												if (v225 == 2) then
																													while true do
																														if (1 == v226) then
																															v229 = v141[3];
																															for v606 = 1, v229 do
																																v228[v606] = v139[v227 + v606];
																															end
																															break;
																														end
																														if (v226 == 0) then
																															local v569 = 0;
																															while true do
																																if (v569 == 0) then
																																	v227 = v141[2];
																																	v228 = v139[v227];
																																	v569 = 1;
																																end
																																if (v569 == 1) then
																																	v226 = 1;
																																	break;
																																end
																															end
																														end
																													end
																													break;
																												end
																											end
																										end
																									elseif (v142 <= 4) then
																										if (v142 == 3) then
																											local v230 = 0;
																											local v231;
																											local v232;
																											while true do
																												if (v230 == 1) then
																													while true do
																														if (v231 == 0) then
																															v232 = v141[2];
																															v139[v232] = v139[v232]();
																															break;
																														end
																													end
																													break;
																												end
																												if (0 == v230) then
																													v231 = 0;
																													v232 = nil;
																													v230 = 1;
																												end
																											end
																										elseif (v139[v141[2]] == v139[v141[17 - 13]]) then
																											v133 = v133 + (118 - (32 + 85));
																										else
																											v133 = v141[3];
																										end
																									elseif (v142 > 5) then
																										v139[v141[2]] = v43(v130[v141[3]], nil, v92);
																									else
																										local v234 = 0;
																										local v235;
																										local v236;
																										while true do
																											if (v234 == 0) then
																												v235 = v141[2];
																												v236 = v139[v141[3]];
																												v234 = 1;
																											end
																											if (v234 == 1) then
																												v139[v235 + 1] = v236;
																												v139[v235] = v236[v139[v141[4]]];
																												break;
																											end
																										end
																									end
																								elseif (v142 <= 9) then
																									if (v142 <= 7) then
																										local v196 = 0;
																										local v197;
																										local v198;
																										local v199;
																										while true do
																											if (1 == v196) then
																												v199 = {};
																												v198 = v18({}, {[v7("\68\78\48\62\64\89\99", "\60\27\17\89\80\36")]=function(v461, v462)
																													local v463 = 0;
																													local v464;
																													local v465;
																													while true do
																														if (0 == v463) then
																															v464 = 0;
																															v465 = nil;
																															v463 = 1;
																														end
																														if (v463 == 1) then
																															while true do
																																if (v464 == 0) then
																																	local v649 = 0;
																																	while true do
																																		if (0 == v649) then
																																			v465 = v199[v462];
																																			return v465[1 + 0][v465[2]];
																																		end
																																	end
																																end
																															end
																															break;
																														end
																													end
																												end,[v7("\74\69\116\203\98\115\116\202\112\98", "\174\21\26\26")]=function(v466, v467, v468)
																													local v469 = 0;
																													local v470;
																													local v471;
																													while true do
																														if (v469 == 0) then
																															v470 = 0;
																															v471 = nil;
																															v469 = 1;
																														end
																														if (v469 == 1) then
																															while true do
																																if (v470 == 0) then
																																	v471 = v199[v467];
																																	v471[1][v471[2]] = v468;
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end});
																												v196 = 2;
																											end
																											if (v196 == 0) then
																												v197 = v130[v141[3]];
																												v198 = nil;
																												v196 = 1;
																											end
																											if (v196 == 2) then
																												for v472 = 1, v141[4] do
																													local v473 = 0;
																													local v474;
																													local v475;
																													while true do
																														if (v473 == 1) then
																															while true do
																																if (v474 == 0) then
																																	local v652 = 0;
																																	while true do
																																		if (0 == v652) then
																																			v133 = v133 + 1;
																																			v475 = v129[v133];
																																			v652 = 1;
																																		end
																																		if (v652 == 1) then
																																			v474 = 1;
																																			break;
																																		end
																																	end
																																end
																																if (v474 == 1) then
																																	if (v475[1] == 94) then
																																		v199[v472 - (1 + 0)] = {v139,v475[3]};
																																	else
																																		v199[v472 - 1] = {v91,v475[3]};
																																	end
																																	v138[#v138 + 1] = v199;
																																	break;
																																end
																															end
																															break;
																														end
																														if (0 == v473) then
																															v474 = 0;
																															v475 = nil;
																															v473 = 1;
																														end
																													end
																												end
																												v139[v141[959 - (892 + 65)]] = v43(v197, v198, v92);
																												break;
																											end
																										end
																									elseif (v142 == 8) then
																										v139[v141[2]] = v141[3];
																									else
																										local v239 = 0;
																										local v240;
																										local v241;
																										local v242;
																										local v243;
																										while true do
																											if (2 == v239) then
																												for v536 = v240, v134 do
																													local v537 = 0;
																													while true do
																														if (v537 == 0) then
																															v243 = v243 + 1;
																															v139[v536] = v241[v243];
																															break;
																														end
																													end
																												end
																												break;
																											end
																											if (v239 == 0) then
																												v240 = v141[4 - 2];
																												v241, v242 = v132(v139[v240](v139[v240 + 1]));
																												v239 = 1;
																											end
																											if (v239 == 1) then
																												v134 = (v242 + v240) - (1 - 0);
																												v243 = 0;
																												v239 = 2;
																											end
																										end
																									end
																								elseif (v142 <= 11) then
																									if (v142 > 10) then
																										v139[v141[2]][v139[v141[3]]] = v141[7 - 3];
																									else
																										v139[v141[2]] = v139[v141[3]][v141[4]];
																									end
																								elseif (v142 > (362 - (87 + 263))) then
																									v139[v141[2]] = v139[v141[3]] - v141[4];
																								else
																									v139[v141[2]] = v139[v141[3]] + v141[4];
																								end
																							elseif (v142 <= (200 - (67 + 113))) then
																								if (v142 <= 16) then
																									if (v142 <= 14) then
																										local v200 = 0;
																										local v201;
																										local v202;
																										local v203;
																										local v204;
																										while true do
																											if (v200 == 0) then
																												v201 = 0;
																												v202 = nil;
																												v200 = 1;
																											end
																											if (v200 == 2) then
																												while true do
																													if (v201 == 0) then
																														local v538 = 0;
																														while true do
																															if (v538 == 0) then
																																v202 = v141[2];
																																v203 = {v139[v202](v21(v139, v202 + 1, v134))};
																																v538 = 1;
																															end
																															if (v538 == 1) then
																																v201 = 1;
																																break;
																															end
																														end
																													end
																													if (v201 == 1) then
																														v204 = 0;
																														for v560 = v202, v141[9 - 5] do
																															local v561 = 0;
																															while true do
																																if (v561 == 0) then
																																	v204 = v204 + 1;
																																	v139[v560] = v203[v204];
																																	break;
																																end
																															end
																														end
																														break;
																													end
																												end
																												break;
																											end
																											if (v200 == 1) then
																												v203 = nil;
																												v204 = nil;
																												v200 = 2;
																											end
																										end
																									elseif (v142 == 15) then
																										v133 = v141[3 + 0];
																									else
																										v139[v141[2]][v139[v141[3]]] = v139[v141[4]];
																									end
																								elseif (v142 <= 18) then
																									if (v142 > 17) then
																										v139[v141[2]] = v141[3] + v139[v141[4]];
																									else
																										local v254 = 0;
																										local v255;
																										while true do
																											if (v254 == 0) then
																												v255 = v141[2];
																												v139[v255](v21(v139, v255 + 1, v134));
																												break;
																											end
																										end
																									end
																								elseif (v142 == 19) then
																									v139[v141[7 - 5]][v141[3]] = v141[4];
																								else
																									local v258 = 0;
																									local v259;
																									while true do
																										if (v258 == 0) then
																											v259 = v141[2];
																											v139[v259](v21(v139, v259 + 1, v134));
																											break;
																										end
																									end
																								end
																							elseif (v142 <= 24) then
																								if (v142 <= 22) then
																									if (v142 == 21) then
																										if (v139[v141[2]] == v141[956 - (802 + 150)]) then
																											v133 = v133 + 1;
																										else
																											v133 = v141[3];
																										end
																									else
																										local v260 = 0;
																										local v261;
																										while true do
																											if (v260 == 0) then
																												v261 = v141[2];
																												do
																													return v139[v261](v21(v139, v261 + 1, v141[3]));
																												end
																												break;
																											end
																										end
																									end
																								elseif (v142 > 23) then
																									if v139[v141[2]] then
																										v133 = v133 + 1;
																									else
																										v133 = v141[7 - 4];
																									end
																								else
																									local v262 = 0;
																									local v263;
																									local v264;
																									local v265;
																									local v266;
																									while true do
																										if (0 == v262) then
																											v263 = 0;
																											v264 = nil;
																											v262 = 1;
																										end
																										if (v262 == 1) then
																											v265 = nil;
																											v266 = nil;
																											v262 = 2;
																										end
																										if (v262 == 2) then
																											while true do
																												if (v263 == 1) then
																													v266 = 0;
																													for v612 = v264, v141[6 - 2] do
																														local v613 = 0;
																														local v614;
																														while true do
																															if (v613 == 0) then
																																v614 = 0;
																																while true do
																																	if (0 == v614) then
																																		v266 = v266 + 1 + 0;
																																		v139[v612] = v265[v266];
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																													break;
																												end
																												if (v263 == 0) then
																													local v572 = 0;
																													while true do
																														if (v572 == 1) then
																															v263 = 1;
																															break;
																														end
																														if (v572 == 0) then
																															v264 = v141[2];
																															v265 = {v139[v264](v139[v264 + 1])};
																															v572 = 1;
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																								end
																							elseif (v142 <= 26) then
																								if (v142 == 25) then
																									if (v139[v141[2]] == v139[v141[4]]) then
																										v133 = v133 + (998 - (915 + 82));
																									else
																										v133 = v141[3];
																									end
																								else
																									v139[v141[2]] = v139[v141[3]][v141[4]];
																								end
																							elseif (v142 == 27) then
																								local v269 = 0;
																								local v270;
																								local v271;
																								local v272;
																								while true do
																									if (1 == v269) then
																										v272 = nil;
																										while true do
																											if (v270 == 0) then
																												local v573 = 0;
																												while true do
																													if (1 == v573) then
																														v270 = 1;
																														break;
																													end
																													if (0 == v573) then
																														v271 = v141[5 - 3];
																														v272 = {};
																														v573 = 1;
																													end
																												end
																											end
																											if (v270 == 1) then
																												for v615 = 1, #v138 do
																													local v616 = 0;
																													local v617;
																													while true do
																														if (0 == v616) then
																															v617 = v138[v615];
																															for v712 = 0 + 0, #v617 do
																																local v713 = 0;
																																local v714;
																																local v715;
																																local v716;
																																while true do
																																	if (v713 == 0) then
																																		v714 = v617[v712];
																																		v715 = v714[1];
																																		v713 = 1;
																																	end
																																	if (v713 == 1) then
																																		v716 = v714[2 - 0];
																																		if ((v715 == v139) and (v716 >= v271)) then
																																			local v749 = 0;
																																			local v750;
																																			while true do
																																				if (v749 == 0) then
																																					v750 = 0;
																																					while true do
																																						if (v750 == 0) then
																																							v272[v716] = v715[v716];
																																							v714[1] = v272;
																																							break;
																																						end
																																					end
																																					break;
																																				end
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																										end
																										break;
																									end
																									if (0 == v269) then
																										v270 = 0;
																										v271 = nil;
																										v269 = 1;
																									end
																								end
																							else
																								v139[v141[2]] = v139[v141[3]][v139[v141[4]]];
																							end
																						elseif (v142 <= 43) then
																							if (v142 <= 35) then
																								if (v142 <= 31) then
																									if (v142 <= (1216 - (1069 + 118))) then
																										v139[v141[2]] = v139[v141[3]] + v141[8 - 4];
																									elseif (v142 > 30) then
																										v139[v141[3 - 1]] = v139[v141[3]] + v139[v141[1 + 3]];
																									else
																										local v276 = 0;
																										local v277;
																										local v278;
																										local v279;
																										local v280;
																										while true do
																											if (v276 == 0) then
																												v277 = 0;
																												v278 = nil;
																												v276 = 1;
																											end
																											if (2 == v276) then
																												while true do
																													if (0 == v277) then
																														local v574 = 0;
																														while true do
																															if (v574 == 1) then
																																v277 = 1;
																																break;
																															end
																															if (0 == v574) then
																																v278 = v141[3 - 1];
																																v279 = v139[v278];
																																v574 = 1;
																															end
																														end
																													end
																													if (v277 == 1) then
																														v280 = v139[v278 + 2 + 0];
																														if (v280 > 0) then
																															if (v279 > v139[v278 + 1]) then
																																v133 = v141[3];
																															else
																																v139[v278 + 3] = v279;
																															end
																														elseif (v279 < v139[v278 + 1]) then
																															v133 = v141[3];
																														else
																															v139[v278 + 3] = v279;
																														end
																														break;
																													end
																												end
																												break;
																											end
																											if (v276 == 1) then
																												v279 = nil;
																												v280 = nil;
																												v276 = 2;
																											end
																										end
																									end
																								elseif (v142 <= 33) then
																									if (v142 == 32) then
																										local v281 = 0;
																										local v282;
																										local v283;
																										local v284;
																										local v285;
																										while true do
																											if (v281 == 1) then
																												v284 = nil;
																												v285 = nil;
																												v281 = 2;
																											end
																											if (v281 == 0) then
																												v282 = 0;
																												v283 = nil;
																												v281 = 1;
																											end
																											if (2 == v281) then
																												while true do
																													if (v282 == 0) then
																														local v576 = 0;
																														while true do
																															if (v576 == 1) then
																																v282 = 1;
																																break;
																															end
																															if (v576 == 0) then
																																v283 = v141[2];
																																v284 = {v139[v283](v139[v283 + 1])};
																																v576 = 1;
																															end
																														end
																													end
																													if (1 == v282) then
																														v285 = 791 - (368 + 423);
																														for v618 = v283, v141[4] do
																															local v619 = 0;
																															local v620;
																															while true do
																																if (v619 == 0) then
																																	v620 = 0;
																																	while true do
																																		if (v620 == 0) then
																																			v285 = v285 + 1;
																																			v139[v618] = v284[v285];
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																														break;
																													end
																												end
																												break;
																											end
																										end
																									else
																										local v286 = 0;
																										local v287;
																										local v288;
																										while true do
																											if (0 == v286) then
																												v287 = v141[2];
																												v288 = v139[v287];
																												v286 = 1;
																											end
																											if (1 == v286) then
																												for v539 = v287 + 1, v134 do
																													v15(v288, v139[v539]);
																												end
																												break;
																											end
																										end
																									end
																								elseif (v142 > (106 - 72)) then
																									v139[v141[2]][v141[3]] = v139[v141[4]];
																								else
																									do
																										return;
																									end
																								end
																							elseif (v142 <= 39) then
																								if (v142 <= 37) then
																									if (v142 == 36) then
																										if (v141[2] == v139[v141[4]]) then
																											v133 = v133 + (19 - (10 + 8));
																										else
																											v133 = v141[3];
																										end
																									else
																										v139[v141[2]] = v139[v141[3]] + v139[v141[15 - 11]];
																									end
																								elseif (v142 == 38) then
																									if (v139[v141[2]] == v141[4]) then
																										v133 = v133 + 1;
																									else
																										v133 = v141[3];
																									end
																								else
																									v139[v141[2]]();
																								end
																							elseif (v142 <= 41) then
																								if (v142 == 40) then
																									if v139[v141[444 - (416 + 26)]] then
																										v133 = v133 + 1;
																									else
																										v133 = v141[3];
																									end
																								else
																									v139[v141[2]] = v139[v141[3]] % v141[12 - 8];
																								end
																							elseif (v142 == 42) then
																								if (v141[1 + 1] < v139[v141[4]]) then
																									v133 = v133 + (1 - 0);
																								else
																									v133 = v141[3];
																								end
																							else
																								do
																									return v139[v141[2]];
																								end
																							end
																						elseif (v142 <= 50) then
																							if (v142 <= (484 - (145 + 293))) then
																								if (v142 <= 44) then
																									v91[v141[3]] = v139[v141[2]];
																								elseif (v142 > 45) then
																									v139[v141[2]] = v139[v141[3]];
																								else
																									local v295 = 0;
																									local v296;
																									local v297;
																									while true do
																										if (v295 == 0) then
																											v296 = v141[432 - (44 + 386)];
																											v297 = v139[v296];
																											v295 = 1;
																										end
																										if (v295 == 1) then
																											for v540 = v296 + 1, v141[3] do
																												v15(v297, v139[v540]);
																											end
																											break;
																										end
																									end
																								end
																							elseif (v142 <= 48) then
																								if (v142 == 47) then
																									v139[v141[2]] = v141[3];
																								else
																									v139[v141[2]] = v141[1489 - (998 + 488)] + v139[v141[2 + 2]];
																								end
																							elseif (v142 > 49) then
																								local v301 = 0;
																								local v302;
																								local v303;
																								while true do
																									if (v301 == 0) then
																										v302 = 0;
																										v303 = nil;
																										v301 = 1;
																									end
																									if (v301 == 1) then
																										while true do
																											if (0 == v302) then
																												v303 = v141[2 + 0];
																												v139[v303](v21(v139, v303 + 1, v141[3]));
																												break;
																											end
																										end
																										break;
																									end
																								end
																							else
																								v139[v141[2]] = v92[v141[3]];
																							end
																						elseif (v142 <= 54) then
																							if (v142 <= 52) then
																								if (v142 == 51) then
																									v139[v141[2]] = v91[v141[3]];
																								else
																									local v308 = 0;
																									local v309;
																									local v310;
																									while true do
																										if (v308 == 0) then
																											v309 = v141[3];
																											v310 = v139[v309];
																											v308 = 1;
																										end
																										if (1 == v308) then
																											for v541 = v309 + (773 - (201 + 571)), v141[4] do
																												v310 = v310 .. v139[v541];
																											end
																											v139[v141[2]] = v310;
																											break;
																										end
																									end
																								end
																							elseif (v142 > 53) then
																								local v311 = 0;
																								local v312;
																								while true do
																									if (v311 == 0) then
																										v312 = v141[2];
																										do
																											return v21(v139, v312, v134);
																										end
																										break;
																									end
																								end
																							else
																								v139[v141[1140 - (116 + 1022)]] = v139[v141[3]] - v141[4];
																							end
																						elseif (v142 <= 56) then
																							if (v142 == 55) then
																								local v314 = 0;
																								local v315;
																								while true do
																									if (v314 == 0) then
																										v315 = v141[2];
																										v139[v315] = v139[v315](v139[v315 + 1]);
																										break;
																									end
																								end
																							else
																								local v316 = 0;
																								local v317;
																								local v318;
																								while true do
																									if (v316 == 0) then
																										v317 = 0;
																										v318 = nil;
																										v316 = 1;
																									end
																									if (v316 == 1) then
																										while true do
																											if (v317 == 0) then
																												v318 = v141[8 - 6];
																												v139[v318](v139[v318 + 1]);
																												break;
																											end
																										end
																										break;
																									end
																								end
																							end
																						elseif (v142 > 57) then
																							v139[v141[2]] = #v139[v141[3]];
																						else
																							local v320 = 0;
																							local v321;
																							local v322;
																							while true do
																								if (1 == v320) then
																									v139[v321 + 1] = v322;
																									v139[v321] = v322[v141[3 + 1]];
																									break;
																								end
																								if (v320 == 0) then
																									v321 = v141[2];
																									v322 = v139[v141[3]];
																									v320 = 1;
																								end
																							end
																						end
																					elseif (v142 <= 87) then
																						if (v142 <= 72) then
																							if (v142 <= 65) then
																								if (v142 <= 61) then
																									if (v142 <= 59) then
																										v139[v141[2]][v141[3]] = v141[4];
																									elseif (v142 > 60) then
																										local v323 = 0;
																										local v324;
																										local v325;
																										local v326;
																										local v327;
																										while true do
																											if (0 == v323) then
																												v324 = 0;
																												v325 = nil;
																												v323 = 1;
																											end
																											if (v323 == 1) then
																												v326 = nil;
																												v327 = nil;
																												v323 = 2;
																											end
																											if (v323 == 2) then
																												while true do
																													if (v324 == 1) then
																														v327 = 0 - 0;
																														for v621 = v325, v141[4] do
																															local v622 = 0;
																															local v623;
																															while true do
																																if (v622 == 0) then
																																	v623 = 0;
																																	while true do
																																		if (v623 == 0) then
																																			v327 = v327 + 1;
																																			v139[v621] = v326[v327];
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																														break;
																													end
																													if (v324 == 0) then
																														local v579 = 0;
																														while true do
																															if (v579 == 1) then
																																v324 = 1;
																																break;
																															end
																															if (v579 == 0) then
																																v325 = v141[2];
																																v326 = {v139[v325](v21(v139, v325 + 1, v134))};
																																v579 = 1;
																															end
																														end
																													end
																												end
																												break;
																											end
																										end
																									else
																										v92[v141[10 - 7]] = v139[v141[2]];
																									end
																								elseif (v142 <= 63) then
																									if (v142 > 62) then
																										local v330 = 0;
																										local v331;
																										while true do
																											if (v330 == 0) then
																												v331 = v141[2];
																												v139[v331] = v139[v331](v21(v139, v331 + 1, v141[3]));
																												break;
																											end
																										end
																									else
																										local v332 = 0;
																										local v333;
																										local v334;
																										local v335;
																										while true do
																											if (v332 == 0) then
																												v333 = 0;
																												v334 = nil;
																												v332 = 1;
																											end
																											if (v332 == 1) then
																												v335 = nil;
																												while true do
																													if (v333 == 0) then
																														local v580 = 0;
																														while true do
																															if (v580 == 1) then
																																v333 = 1;
																																break;
																															end
																															if (v580 == 0) then
																																v334 = v141[2];
																																v335 = v139[v141[3]];
																																v580 = 1;
																															end
																														end
																													end
																													if (v333 == 1) then
																														v139[v334 + 1] = v335;
																														v139[v334] = v335[v141[4]];
																														break;
																													end
																												end
																												break;
																											end
																										end
																									end
																								elseif (v142 == 64) then
																									local v336 = 0;
																									local v337;
																									local v338;
																									local v339;
																									while true do
																										if (v336 == 0) then
																											v337 = 0;
																											v338 = nil;
																											v336 = 1;
																										end
																										if (v336 == 1) then
																											v339 = nil;
																											while true do
																												if (v337 == 1) then
																													for v624 = v338 + 1, v141[863 - (814 + 45)] do
																														v339 = v339 .. v139[v624];
																													end
																													v139[v141[2]] = v339;
																													break;
																												end
																												if (v337 == 0) then
																													local v585 = 0;
																													while true do
																														if (0 == v585) then
																															v338 = v141[3];
																															v339 = v139[v338];
																															v585 = 1;
																														end
																														if (v585 == 1) then
																															v337 = 1;
																															break;
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																								else
																									local v340 = 0;
																									local v341;
																									while true do
																										if (v340 == 0) then
																											v341 = v141[2];
																											v139[v341](v139[v341 + 1]);
																											break;
																										end
																									end
																								end
																							elseif (v142 <= 68) then
																								if (v142 <= 66) then
																									local v210 = 0;
																									local v211;
																									local v212;
																									local v213;
																									local v214;
																									while true do
																										if (v210 == 0) then
																											v211 = v141[2];
																											v212, v213 = v132(v139[v211](v139[v211 + 1]));
																											v210 = 1;
																										end
																										if (v210 == 1) then
																											v134 = (v213 + v211) - 1;
																											v214 = 0;
																											v210 = 2;
																										end
																										if (v210 == 2) then
																											for v483 = v211, v134 do
																												local v484 = 0;
																												while true do
																													if (v484 == 0) then
																														v214 = v214 + 1;
																														v139[v483] = v212[v214];
																														break;
																													end
																												end
																											end
																											break;
																										end
																									end
																								elseif (v142 > 67) then
																									local v342 = 0;
																									local v343;
																									while true do
																										if (v342 == 0) then
																											v343 = v141[2];
																											v139[v343] = v139[v343](v21(v139, v343 + 1, v134));
																											break;
																										end
																									end
																								else
																									v139[v141[2]] = v141[3] ~= 0;
																								end
																							elseif (v142 <= (172 - 102)) then
																								if (v142 > 69) then
																									do
																										return v139[v141[2]];
																									end
																								elseif (v139[v141[2]] ~= v141[1 + 3]) then
																									v133 = v133 + 1 + 0;
																								else
																									v133 = v141[888 - (261 + 624)];
																								end
																							elseif (v142 == (126 - 55)) then
																								v133 = v141[3];
																							else
																								local v346 = 0;
																								local v347;
																								local v348;
																								local v349;
																								while true do
																									if (v346 == 1) then
																										v349 = v139[v347] + v348;
																										v139[v347] = v349;
																										v346 = 2;
																									end
																									if (v346 == 2) then
																										if (v348 > 0) then
																											if (v349 <= v139[v347 + 1]) then
																												local v625 = 0;
																												local v626;
																												while true do
																													if (0 == v625) then
																														v626 = 0;
																														while true do
																															if (v626 == 0) then
																																v133 = v141[3];
																																v139[v347 + 3] = v349;
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																										elseif (v349 >= v139[v347 + 1]) then
																											local v627 = 0;
																											local v628;
																											while true do
																												if (v627 == 0) then
																													v628 = 0;
																													while true do
																														if (v628 == 0) then
																															v133 = v141[3];
																															v139[v347 + 3] = v349;
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																										break;
																									end
																									if (v346 == 0) then
																										v347 = v141[1082 - (1020 + 60)];
																										v348 = v139[v347 + 2];
																										v346 = 1;
																									end
																								end
																							end
																						elseif (v142 <= 79) then
																							if (v142 <= 75) then
																								if (v142 <= 73) then
																									v139[v141[2]] = v139[v141[3]] % v139[v141[4]];
																								elseif (v142 == 74) then
																									local v350 = 0;
																									local v351;
																									local v352;
																									local v353;
																									local v354;
																									local v355;
																									while true do
																										if (v350 == 1) then
																											v353 = nil;
																											v354 = nil;
																											v350 = 2;
																										end
																										if (v350 == 0) then
																											v351 = 0;
																											v352 = nil;
																											v350 = 1;
																										end
																										if (v350 == 2) then
																											v355 = nil;
																											while true do
																												if (v351 == 2) then
																													for v629 = v352, v134 do
																														local v630 = 0;
																														local v631;
																														while true do
																															if (v630 == 0) then
																																v631 = 0;
																																while true do
																																	if (v631 == 0) then
																																		v355 = v355 + 1;
																																		v139[v629] = v353[v355];
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																													break;
																												end
																												if (v351 == 1) then
																													local v586 = 0;
																													while true do
																														if (v586 == 1) then
																															v351 = 2;
																															break;
																														end
																														if (v586 == 0) then
																															v134 = (v354 + v352) - 1;
																															v355 = 1423 - (630 + 793);
																															v586 = 1;
																														end
																													end
																												end
																												if (v351 == 0) then
																													local v587 = 0;
																													while true do
																														if (v587 == 0) then
																															v352 = v141[2];
																															v353, v354 = v132(v139[v352](v21(v139, v352 + 1, v141[3])));
																															v587 = 1;
																														end
																														if (v587 == 1) then
																															v351 = 1;
																															break;
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																								else
																									v139[v141[2]][v139[v141[3]]] = v141[4];
																								end
																							elseif (v142 <= 77) then
																								if (v142 == 76) then
																									local v358 = 0;
																									local v359;
																									local v360;
																									while true do
																										if (v358 == 1) then
																											while true do
																												if (v359 == 0) then
																													v360 = v141[2];
																													do
																														return v21(v139, v360, v360 + v141[3]);
																													end
																													break;
																												end
																											end
																											break;
																										end
																										if (v358 == 0) then
																											v359 = 0;
																											v360 = nil;
																											v358 = 1;
																										end
																									end
																								else
																									v92[v141[3]] = v139[v141[2]];
																								end
																							elseif (v142 > 78) then
																								for v456 = v141[6 - 4], v141[14 - 11] do
																									v139[v456] = nil;
																								end
																							else
																								local v363 = 0;
																								local v364;
																								local v365;
																								local v366;
																								local v367;
																								while true do
																									if (v363 == 1) then
																										v366 = nil;
																										v367 = nil;
																										v363 = 2;
																									end
																									if (v363 == 0) then
																										v364 = 0;
																										v365 = nil;
																										v363 = 1;
																									end
																									if (v363 == 2) then
																										while true do
																											if (v364 == 0) then
																												local v589 = 0;
																												while true do
																													if (v589 == 1) then
																														v364 = 1;
																														break;
																													end
																													if (v589 == 0) then
																														v365 = v141[2];
																														v366 = v139[v365];
																														v589 = 1;
																													end
																												end
																											end
																											if (v364 == 1) then
																												v367 = v141[3];
																												for v632 = 1, v367 do
																													v366[v632] = v139[v365 + v632];
																												end
																												break;
																											end
																										end
																										break;
																									end
																								end
																							end
																						elseif (v142 <= 83) then
																							if (v142 <= 81) then
																								if (v142 == 80) then
																									if (v141[2] < v139[v141[4]]) then
																										v133 = v133 + 1;
																									else
																										v133 = v141[2 + 1];
																									end
																								else
																									local v368 = 0;
																									local v369;
																									local v370;
																									local v371;
																									local v372;
																									while true do
																										if (v368 == 0) then
																											v369 = 0;
																											v370 = nil;
																											v368 = 1;
																										end
																										if (v368 == 2) then
																											while true do
																												if (v369 == 0) then
																													local v591 = 0;
																													while true do
																														if (1 == v591) then
																															v369 = 1;
																															break;
																														end
																														if (v591 == 0) then
																															v370 = v141[2];
																															v371 = v139[v370];
																															v591 = 1;
																														end
																													end
																												end
																												if (v369 == 1) then
																													v372 = v139[v370 + 2];
																													if (v372 > 0) then
																														if (v371 > v139[v370 + 1]) then
																															v133 = v141[3];
																														else
																															v139[v370 + 3] = v371;
																														end
																													elseif (v371 < v139[v370 + (3 - 2)]) then
																														v133 = v141[3];
																													else
																														v139[v370 + 3] = v371;
																													end
																													break;
																												end
																											end
																											break;
																										end
																										if (v368 == 1) then
																											v371 = nil;
																											v372 = nil;
																											v368 = 2;
																										end
																									end
																								end
																							elseif (v142 == 82) then
																								v139[v141[2]] = v91[v141[1750 - (760 + 987)]];
																							else
																								local v375 = 0;
																								local v376;
																								local v377;
																								local v378;
																								while true do
																									if (v375 == 0) then
																										v376 = 0;
																										v377 = nil;
																										v375 = 1;
																									end
																									if (v375 == 1) then
																										v378 = nil;
																										while true do
																											if (v376 == 1) then
																												for v635 = v377 + 1, v134 do
																													v15(v378, v139[v635]);
																												end
																												break;
																											end
																											if (v376 == 0) then
																												local v593 = 0;
																												while true do
																													if (v593 == 1) then
																														v376 = 1;
																														break;
																													end
																													if (0 == v593) then
																														v377 = v141[2];
																														v378 = v139[v377];
																														v593 = 1;
																													end
																												end
																											end
																										end
																										break;
																									end
																								end
																							end
																						elseif (v142 <= 85) then
																							if (v142 == (1997 - (1789 + 124))) then
																								local v379 = 0;
																								local v380;
																								local v381;
																								local v382;
																								local v383;
																								local v384;
																								while true do
																									if (0 == v379) then
																										v380 = 0;
																										v381 = nil;
																										v379 = 1;
																									end
																									if (v379 == 1) then
																										v382 = nil;
																										v383 = nil;
																										v379 = 2;
																									end
																									if (v379 == 2) then
																										v384 = nil;
																										while true do
																											if (v380 == 1) then
																												local v594 = 0;
																												while true do
																													if (v594 == 1) then
																														v380 = 2;
																														break;
																													end
																													if (v594 == 0) then
																														v134 = (v383 + v381) - 1;
																														v384 = 0;
																														v594 = 1;
																													end
																												end
																											end
																											if (v380 == 0) then
																												local v595 = 0;
																												while true do
																													if (v595 == 0) then
																														v381 = v141[2];
																														v382, v383 = v132(v139[v381](v21(v139, v381 + 1, v141[3])));
																														v595 = 1;
																													end
																													if (v595 == 1) then
																														v380 = 1;
																														break;
																													end
																												end
																											end
																											if (v380 == 2) then
																												for v636 = v381, v134 do
																													local v637 = 0;
																													while true do
																														if (v637 == 0) then
																															v384 = v384 + 1;
																															v139[v636] = v382[v384];
																															break;
																														end
																													end
																												end
																												break;
																											end
																										end
																										break;
																									end
																								end
																							else
																								v139[v141[2]] = {};
																							end
																						elseif (v142 == (852 - (745 + 21))) then
																							if not v139[v141[2]] then
																								v133 = v133 + 1;
																							else
																								v133 = v141[3];
																							end
																						else
																							local v386 = 0;
																							local v387;
																							local v388;
																							while true do
																								if (v386 == 1) then
																									while true do
																										if (0 == v387) then
																											v388 = v141[2];
																											v139[v388](v21(v139, v388 + 1, v141[3]));
																											break;
																										end
																									end
																									break;
																								end
																								if (v386 == 0) then
																									v387 = 0;
																									v388 = nil;
																									v386 = 1;
																								end
																							end
																						end
																					elseif (v142 <= 102) then
																						if (v142 <= 94) then
																							if (v142 <= 90) then
																								if (v142 <= 88) then
																									local v216 = 0;
																									local v217;
																									local v218;
																									local v219;
																									while true do
																										if (v216 == 0) then
																											v217 = 0;
																											v218 = nil;
																											v216 = 1;
																										end
																										if (v216 == 1) then
																											v219 = nil;
																											while true do
																												if (v217 == 0) then
																													local v542 = 0;
																													while true do
																														if (v542 == 0) then
																															v218 = v141[2];
																															v219 = v139[v141[3]];
																															v542 = 1;
																														end
																														if (v542 == 1) then
																															v217 = 1;
																															break;
																														end
																													end
																												end
																												if (1 == v217) then
																													v139[v218 + 1] = v219;
																													v139[v218] = v219[v139[v141[4]]];
																													break;
																												end
																											end
																											break;
																										end
																									end
																								elseif (v142 == 89) then
																									local v389 = 0;
																									local v390;
																									while true do
																										if (v389 == 0) then
																											v390 = v141[2];
																											do
																												return v139[v390](v21(v139, v390 + 1, v141[3]));
																											end
																											break;
																										end
																									end
																								elseif not v139[v141[2]] then
																									v133 = v133 + 1;
																								else
																									v133 = v141[3];
																								end
																							elseif (v142 <= 92) then
																								if (v142 == 91) then
																									v139[v141[2]][v139[v141[2 + 1]]] = v139[v141[4]];
																								else
																									v139[v141[2]] = {};
																								end
																							elseif (v142 > 93) then
																								v139[v141[2]] = v139[v141[3]];
																							else
																								local v396 = 0;
																								local v397;
																								local v398;
																								local v399;
																								local v400;
																								while true do
																									if (2 == v396) then
																										for v546 = v397, v134 do
																											local v547 = 0;
																											local v548;
																											while true do
																												if (v547 == 0) then
																													v548 = 0;
																													while true do
																														if (v548 == 0) then
																															v400 = v400 + 1;
																															v139[v546] = v398[v400];
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																										break;
																									end
																									if (v396 == 0) then
																										v397 = v141[2];
																										v398, v399 = v132(v139[v397](v21(v139, v397 + 1, v134)));
																										v396 = 1;
																									end
																									if (v396 == 1) then
																										v134 = (v399 + v397) - 1;
																										v400 = 0;
																										v396 = 2;
																									end
																								end
																							end
																						elseif (v142 <= (269 - 171)) then
																							if (v142 <= 96) then
																								if (v142 == 95) then
																									for v458 = v141[2], v141[11 - 8] do
																										v139[v458] = nil;
																									end
																								else
																									v139[v141[2]] = v139[v141[3]][v139[v141[4]]];
																								end
																							elseif (v142 == 97) then
																								local v403 = 0;
																								local v404;
																								local v405;
																								local v406;
																								local v407;
																								while true do
																									if (1 == v403) then
																										v406 = nil;
																										v407 = nil;
																										v403 = 2;
																									end
																									if (v403 == 2) then
																										while true do
																											if (1 == v404) then
																												local v597 = 0;
																												while true do
																													if (v597 == 0) then
																														v407 = {};
																														v406 = v18({}, {[v7("\8\158\189\30\51\164\172", "\112\87\193\212")]=function(v695, v696)
																															local v697 = 0;
																															local v698;
																															while true do
																																if (v697 == 0) then
																																	v698 = v407[v696];
																																	return v698[1][v698[1 + 1]];
																																end
																															end
																														end,[v7("\148\75\177\186\82\72\220\39\174\108", "\67\203\20\223\223\37\33\178")]=function(v699, v700, v701)
																															local v702 = 0;
																															local v703;
																															local v704;
																															while true do
																																if (v702 == 0) then
																																	v703 = 0;
																																	v704 = nil;
																																	v702 = 1;
																																end
																																if (v702 == 1) then
																																	while true do
																																		if (0 == v703) then
																																			v704 = v407[v700];
																																			v704[1][v704[2 + 0]] = v701;
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end});
																														v597 = 1;
																													end
																													if (1 == v597) then
																														v404 = 2;
																														break;
																													end
																												end
																											end
																											if (v404 == 2) then
																												for v640 = 1, v141[4] do
																													local v641 = 0;
																													local v642;
																													while true do
																														if (v641 == 1) then
																															if (v642[1] == 94) then
																																v407[v640 - (1056 - (87 + 968))] = {v139,v642[3]};
																															else
																																v407[v640 - 1] = {v91,v642[3]};
																															end
																															v138[#v138 + (4 - 3)] = v407;
																															break;
																														end
																														if (v641 == 0) then
																															v133 = v133 + 1;
																															v642 = v129[v133];
																															v641 = 1;
																														end
																													end
																												end
																												v139[v141[2]] = v43(v405, v406, v92);
																												break;
																											end
																											if (v404 == 0) then
																												local v599 = 0;
																												while true do
																													if (v599 == 1) then
																														v404 = 1;
																														break;
																													end
																													if (v599 == 0) then
																														v405 = v130[v141[3]];
																														v406 = nil;
																														v599 = 1;
																													end
																												end
																											end
																										end
																										break;
																									end
																									if (0 == v403) then
																										v404 = 0;
																										v405 = nil;
																										v403 = 1;
																									end
																								end
																							else
																								local v408 = 0;
																								local v409;
																								local v410;
																								while true do
																									if (v408 == 1) then
																										while true do
																											if (v409 == 0) then
																												v410 = v141[2];
																												v139[v410] = v139[v410](v21(v139, v410 + 1, v134));
																												break;
																											end
																										end
																										break;
																									end
																									if (v408 == 0) then
																										v409 = 0;
																										v410 = nil;
																										v408 = 1;
																									end
																								end
																							end
																						elseif (v142 <= 100) then
																							if (v142 > 99) then
																								local v411 = 0;
																								local v412;
																								local v413;
																								local v414;
																								while true do
																									if (0 == v411) then
																										v412 = 0;
																										v413 = nil;
																										v411 = 1;
																									end
																									if (v411 == 1) then
																										v414 = nil;
																										while true do
																											if (v412 == 0) then
																												local v602 = 0;
																												while true do
																													if (v602 == 1) then
																														v412 = 1;
																														break;
																													end
																													if (v602 == 0) then
																														v413 = v141[2];
																														v414 = {};
																														v602 = 1;
																													end
																												end
																											end
																											if (v412 == 1) then
																												for v643 = 1, #v138 do
																													local v644 = 0;
																													local v645;
																													while true do
																														if (v644 == 0) then
																															v645 = v138[v643];
																															for v717 = 0 + 0, #v645 do
																																local v718 = 0;
																																local v719;
																																local v720;
																																local v721;
																																local v722;
																																while true do
																																	if (v718 == 0) then
																																		v719 = 0;
																																		v720 = nil;
																																		v718 = 1;
																																	end
																																	if (v718 == 1) then
																																		v721 = nil;
																																		v722 = nil;
																																		v718 = 2;
																																	end
																																	if (v718 == 2) then
																																		while true do
																																			if (v719 == 0) then
																																				local v753 = 0;
																																				while true do
																																					if (v753 == 0) then
																																						v720 = v645[v717];
																																						v721 = v720[1];
																																						v753 = 1;
																																					end
																																					if (v753 == 1) then
																																						v719 = 1;
																																						break;
																																					end
																																				end
																																			end
																																			if (v719 == 1) then
																																				v722 = v720[2];
																																				if ((v721 == v139) and (v722 >= v413)) then
																																					local v755 = 0;
																																					local v756;
																																					while true do
																																						if (v755 == 0) then
																																							v756 = 0;
																																							while true do
																																								if (v756 == 0) then
																																									v414[v722] = v721[v722];
																																									v720[1] = v414;
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																										end
																										break;
																									end
																								end
																							elseif (v139[v141[2]] ~= v141[4]) then
																								v133 = v133 + 1;
																							else
																								v133 = v141[3];
																							end
																						elseif (v142 > 101) then
																							local v415 = 0;
																							local v416;
																							local v417;
																							while true do
																								if (v415 == 0) then
																									v416 = 0;
																									v417 = nil;
																									v415 = 1;
																								end
																								if (v415 == 1) then
																									while true do
																										if (v416 == 0) then
																											v417 = v141[2];
																											v139[v417] = v139[v417](v139[v417 + 1]);
																											break;
																										end
																									end
																									break;
																								end
																							end
																						else
																							v139[v141[4 - 2]] = v43(v130[v141[3]], nil, v92);
																						end
																					elseif (v142 <= (1522 - (447 + 966))) then
																						if (v142 <= 105) then
																							if (v142 <= 103) then
																								local v220 = 0;
																								local v221;
																								local v222;
																								local v223;
																								local v224;
																								while true do
																									if (v220 == 1) then
																										v223 = nil;
																										v224 = nil;
																										v220 = 2;
																									end
																									if (v220 == 2) then
																										while true do
																											if (v221 == 2) then
																												if (v223 > 0) then
																													if (v224 <= v139[v222 + 1]) then
																														local v656 = 0;
																														while true do
																															if (v656 == 0) then
																																v133 = v141[3];
																																v139[v222 + 3] = v224;
																																break;
																															end
																														end
																													end
																												elseif (v224 >= v139[v222 + 1]) then
																													local v657 = 0;
																													while true do
																														if (0 == v657) then
																															v133 = v141[3];
																															v139[v222 + 3] = v224;
																															break;
																														end
																													end
																												end
																												break;
																											end
																											if (v221 == 0) then
																												local v549 = 0;
																												while true do
																													if (v549 == 1) then
																														v221 = 1;
																														break;
																													end
																													if (v549 == 0) then
																														v222 = v141[2];
																														v223 = v139[v222 + 2];
																														v549 = 1;
																													end
																												end
																											end
																											if (v221 == 1) then
																												local v550 = 0;
																												while true do
																													if (v550 == 1) then
																														v221 = 2;
																														break;
																													end
																													if (0 == v550) then
																														v224 = v139[v222] + v223;
																														v139[v222] = v224;
																														v550 = 1;
																													end
																												end
																											end
																										end
																										break;
																									end
																									if (v220 == 0) then
																										v221 = 0;
																										v222 = nil;
																										v220 = 1;
																									end
																								end
																							elseif (v142 > 104) then
																								v91[v141[8 - 5]] = v139[v141[2]];
																							else
																								v139[v141[2]] = v139[v141[3]] % v141[4];
																							end
																						elseif (v142 <= 107) then
																							if (v142 == 106) then
																								local v422 = 0;
																								local v423;
																								local v424;
																								local v425;
																								local v426;
																								while true do
																									if (v422 == 2) then
																										for v551 = v423, v134 do
																											local v552 = 0;
																											local v553;
																											while true do
																												if (v552 == 0) then
																													v553 = 0;
																													while true do
																														if (v553 == 0) then
																															v426 = v426 + (1818 - (1703 + 114));
																															v139[v551] = v424[v426];
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																										break;
																									end
																									if (v422 == 0) then
																										v423 = v141[2];
																										v424, v425 = v132(v139[v423](v21(v139, v423 + 1, v134)));
																										v422 = 1;
																									end
																									if (v422 == 1) then
																										v134 = (v425 + v423) - 1;
																										v426 = 0;
																										v422 = 2;
																									end
																								end
																							elseif (v141[2] == v139[v141[4]]) then
																								v133 = v133 + 1;
																							else
																								v133 = v141[3];
																							end
																						elseif (v142 > 108) then
																							v139[v141[2]]();
																						else
																							local v427 = 0;
																							local v428;
																							local v429;
																							local v430;
																							local v431;
																							local v432;
																							while true do
																								if (v427 == 2) then
																									for v554 = 1, v429 do
																										v139[v430 + v554] = v431[v554];
																									end
																									v432 = v431[1];
																									v427 = 3;
																								end
																								if (v427 == 3) then
																									if v432 then
																										local v564 = 0;
																										local v565;
																										while true do
																											if (v564 == 0) then
																												v565 = 0;
																												while true do
																													if (v565 == 0) then
																														v139[v430] = v432;
																														v133 = v141[3];
																														break;
																													end
																												end
																												break;
																											end
																										end
																									else
																										v133 = v133 + 1;
																									end
																									break;
																								end
																								if (v427 == 0) then
																									v428 = v141[2];
																									v429 = v141[4];
																									v427 = 1;
																								end
																								if (v427 == 1) then
																									v430 = v428 + (703 - (376 + 325));
																									v431 = {v139[v428](v139[v428 + 1], v139[v430])};
																									v427 = 2;
																								end
																							end
																						end
																					elseif (v142 <= (184 - 71)) then
																						if (v142 <= (341 - 230)) then
																							if (v142 == 110) then
																								v139[v141[2]] = v139[v141[3]] % v139[v141[2 + 2]];
																							else
																								local v434 = 0;
																								local v435;
																								while true do
																									if (v434 == 0) then
																										v435 = v141[2];
																										v139[v435] = v139[v435]();
																										break;
																									end
																								end
																							end
																						elseif (v142 == (246 - 134)) then
																							v139[v141[2]][v141[3]] = v139[v141[4]];
																						else
																							v139[v141[2]] = v92[v141[3]];
																						end
																					elseif (v142 <= (129 - (9 + 5))) then
																						if (v142 > (490 - (85 + 291))) then
																							v139[v141[1267 - (243 + 1022)]] = #v139[v141[3]];
																						else
																							v139[v141[2]] = v141[3] ~= 0;
																						end
																					elseif (v142 > 116) then
																						local v442 = 0;
																						local v443;
																						local v444;
																						while true do
																							if (v442 == 0) then
																								v443 = 0;
																								v444 = nil;
																								v442 = 1;
																							end
																							if (v442 == 1) then
																								while true do
																									if (v443 == 0) then
																										v444 = v141[2];
																										do
																											return v21(v139, v444, v134);
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					else
																						local v445 = 0;
																						local v446;
																						local v447;
																						local v448;
																						local v449;
																						local v450;
																						while true do
																							if (v445 == 2) then
																								for v557 = 1, v447 do
																									v139[v448 + v557] = v449[v557];
																								end
																								v450 = v449[1];
																								v445 = 3;
																							end
																							if (0 == v445) then
																								v446 = v141[2];
																								v447 = v141[14 - 10];
																								v445 = 1;
																							end
																							if (v445 == 3) then
																								if v450 then
																									local v566 = 0;
																									local v567;
																									while true do
																										if (v566 == 0) then
																											v567 = 0;
																											while true do
																												if (v567 == 0) then
																													v139[v448] = v450;
																													v133 = v141[3];
																													break;
																												end
																											end
																											break;
																										end
																									end
																								else
																									v133 = v133 + 1;
																								end
																								break;
																							end
																							if (1 == v445) then
																								v448 = v446 + 2;
																								v449 = {v139[v446](v139[v446 + 1], v139[v448])};
																								v445 = 2;
																							end
																						end
																					end
																					v133 = v133 + 1;
																					break;
																				end
																				if (v149 == 0) then
																					local v172 = 0;
																					while true do
																						if (v172 == 1) then
																							v149 = 1;
																							break;
																						end
																						if (v172 == 0) then
																							v141 = v129[v133];
																							v142 = v141[1638 - (1523 + 114)];
																							v172 = 1;
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																end
																break;
															end
														end
													end;
												end
											end
										end
										return v43(v42(), {}, v29)(...);
									end
								end
							end
							v45 = 2;
						end
					end
				end
				break;
			end
		end
	end
	vv17(), ...);
end
