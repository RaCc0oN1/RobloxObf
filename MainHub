do
	local v0 = string.char;
	local v1 = string.byte;
	local v2 = string.sub;
	local v3 = bit32 or bit;
	local v4 = v3.bxor;
	local v5 = table.concat;
	local v6 = table.insert;
	local function v7(v24, v25)
		local v26 = 0;
		local v27;
		while true do
			if (v26 == 1) then
				return v5(v27);
			end
			if (v26 == 0) then
				v27 = {};
				for v44 = 1, #v24 do
					v6(v27, v0(v4(v1(v2(v24, v44, v44 + 1)), v1(v2(v25, 1 + (v44 % #v25), 1 + (v44 % #v25) + 1))) % 256));
				end
				v26 = 1;
			end
		end
	end
	local v8 = tonumber;
	local v9 = string.byte;
	local v10 = string.char;
	local v11 = string.sub;
	local v12 = string.gsub;
	local v13 = string.rep;
	local v14 = table.concat;
	local v15 = table.insert;
	local v16 = math.ldexp;
	local v17 = getfenv or function()
		return _ENV;
	end;
	local v18 = setmetatable;
	local v19 = pcall;
	local v20 = select;
	local v21 = unpack or table.unpack;
	local v22 = tonumber;
	local function v23(v28, v29, ...)
		local v30 = 0;
		local v31;
		local v32;
		local v33;
		local v34;
		local v35;
		local v36;
		local v37;
		local v38;
		local v39;
		local v40;
		local v41;
		local v42;
		local v43;
		while true do
			if (v30 == 1) then
				v35 = nil;
				v36 = nil;
				v37 = nil;
				v38 = nil;
				v30 = 2;
			end
			if (2 == v30) then
				v39 = nil;
				v40 = nil;
				v41 = nil;
				v42 = nil;
				v30 = 3;
			end
			if (v30 == 0) then
				v31 = 0;
				v32 = nil;
				v33 = nil;
				v34 = nil;
				v30 = 1;
			end
			if (v30 == 3) then
				v43 = nil;
				while true do
					local v45 = 0;
					while true do
						if (2 == v45) then
							if (v31 == 2) then
								local v46 = 0;
								while true do
									if (v46 == 1) then
										function v36()
											local v54 = 0;
											local v55;
											local v56;
											while true do
												if (v54 == 0) then
													v55, v56 = v9(v28, v32, v32 + 2);
													v32 = v32 + 2;
													v54 = 1;
												end
												if (v54 == 1) then
													return (v56 * (875 - (555 + 64))) + v55;
												end
											end
										end
										v31 = 3;
										break;
									end
									if (v46 == 0) then
										function v35()
											local v57 = 0;
											local v58;
											local v59;
											while true do
												if (v57 == 0) then
													v58 = 0;
													v59 = nil;
													v57 = 1;
												end
												if (v57 == 1) then
													while true do
														local v107 = 0;
														while true do
															if (v107 == 0) then
																if (v58 == 1) then
																	return v59;
																end
																if (0 == v58) then
																	local v116 = 0;
																	while true do
																		if (v116 == 1) then
																			v58 = 1;
																			break;
																		end
																		if (v116 == 0) then
																			v59 = v9(v28, v32, v32);
																			v32 = v32 + 1;
																			v116 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v36 = nil;
										v46 = 1;
									end
								end
							end
							if (v31 == 0) then
								local v47 = 0;
								while true do
									if (v47 == 0) then
										v32 = 2 - 1;
										v33 = nil;
										v47 = 1;
									end
									if (v47 == 1) then
										v28 = v12(v11(v28, 5), v7("\140\207", "\56\162\225\118\158\89\142"), function(v60)
											if (v9(v60, 2) == 79) then
												local v98 = 0;
												local v99;
												while true do
													if (v98 == 0) then
														v99 = 0;
														while true do
															if (v99 == 0) then
																local v115 = 0;
																while true do
																	if (v115 == 0) then
																		v33 = v8(v11(v60, 1, 1));
																		return "";
																	end
																end
															end
														end
														break;
													end
												end
											else
												local v100 = 0;
												local v101;
												local v102;
												while true do
													if (v100 == 0) then
														v101 = 0;
														v102 = nil;
														v100 = 1;
													end
													if (v100 == 1) then
														while true do
															if (v101 == 0) then
																v102 = v10(v8(v60, 16));
																if v33 then
																	local v128 = 0;
																	local v129;
																	local v130;
																	while true do
																		if (v128 == 0) then
																			v129 = 0;
																			v130 = nil;
																			v128 = 1;
																		end
																		if (v128 == 1) then
																			while true do
																				local v160 = 0;
																				while true do
																					if (v160 == 0) then
																						if (v129 == 1) then
																							return v130;
																						end
																						if (0 == v129) then
																							local v169 = 0;
																							while true do
																								if (0 == v169) then
																									v130 = v13(v102, v33);
																									v33 = nil;
																									v169 = 1;
																								end
																								if (v169 == 1) then
																									v129 = 1;
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																	end
																else
																	return v102;
																end
																break;
															end
														end
														break;
													end
												end
											end
										end);
										v31 = 1;
										break;
									end
								end
							end
							v45 = 3;
						end
						if (v45 == 3) then
							if (v31 == 7) then
								local v48 = 0;
								while true do
									if (v48 == 0) then
										function v43(v61, v62, v63)
											local v64 = 0;
											local v65;
											local v66;
											local v67;
											local v68;
											while true do
												if (v64 == 1) then
													v67 = nil;
													v68 = nil;
													v64 = 2;
												end
												if (v64 == 0) then
													v65 = 0;
													v66 = nil;
													v64 = 1;
												end
												if (v64 == 2) then
													while true do
														local v108 = 0;
														while true do
															if (v108 == 0) then
																if (v65 == 0) then
																	local v117 = 0;
																	while true do
																		if (0 == v117) then
																			v66 = v61[1];
																			v67 = v61[2];
																			v117 = 1;
																		end
																		if (v117 == 1) then
																			v65 = 1;
																			break;
																		end
																	end
																end
																if (1 == v65) then
																	local v118 = 0;
																	while true do
																		if (v118 == 0) then
																			v68 = v61[3];
																			return function(...)
																				local v135 = 0;
																				local v136;
																				local v137;
																				local v138;
																				local v139;
																				local v140;
																				local v141;
																				local v142;
																				local v143;
																				local v144;
																				local v145;
																				local v146;
																				local v147;
																				local v148;
																				local v149;
																				while true do
																					if (v135 == 1) then
																						v140 = 1;
																						v141 = -(118 - (32 + 85));
																						v142 = {};
																						v143 = {...};
																						v135 = 2;
																					end
																					if (v135 == 3) then
																						v147 = (v144 - v138) + 1;
																						v148 = nil;
																						v149 = nil;
																						while true do
																							local v162 = 0;
																							while true do
																								if (0 == v162) then
																									v148 = v136[v140];
																									v149 = v148[1];
																									v162 = 1;
																								end
																								if (1 == v162) then
																									if (v149 <= 58) then
																										if (v149 <= 28) then
																											if (v149 <= 13) then
																												if (v149 <= 6) then
																													if (v149 <= 2) then
																														if (v149 <= 0) then
																															if not v146[v148[2]] then
																																v140 = v140 + 1;
																															else
																																v140 = v148[3];
																															end
																														elseif (v149 > 1) then
																															local v211 = 0;
																															local v212;
																															while true do
																																if (v211 == 0) then
																																	v212 = v148[2];
																																	v146[v212] = v146[v212](v21(v146, v212 + 1, v148[3]));
																																	break;
																																end
																															end
																														else
																															local v213 = 0;
																															local v214;
																															local v215;
																															while true do
																																if (v213 == 0) then
																																	v214 = 0;
																																	v215 = nil;
																																	v213 = 1;
																																end
																																if (v213 == 1) then
																																	while true do
																																		if (v214 == 0) then
																																			v215 = v148[2];
																																			v146[v215](v21(v146, v215 + 1 + 0, v141));
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																													elseif (v149 <= 4) then
																														if (v149 == (1 + 2)) then
																															local v216 = 0;
																															local v217;
																															while true do
																																if (v216 == 0) then
																																	v217 = v148[2];
																																	v146[v217](v146[v217 + 1]);
																																	break;
																																end
																															end
																														else
																															v146[v148[959 - (892 + 65)]] = v146[v148[3]] % v146[v148[4]];
																														end
																													elseif (v149 > 5) then
																														local v219 = 0;
																														local v220;
																														local v221;
																														local v222;
																														local v223;
																														local v224;
																														while true do
																															if (v219 == 1) then
																																v222 = v220 + 2;
																																v223 = {v146[v220](v146[v220 + 1], v146[v222])};
																																v219 = 2;
																															end
																															if (v219 == 0) then
																																v220 = v148[2];
																																v221 = v148[4];
																																v219 = 1;
																															end
																															if (v219 == 3) then
																																if v224 then
																																	local v574 = 0;
																																	while true do
																																		if (v574 == 0) then
																																			v146[v222] = v224;
																																			v140 = v148[3];
																																			break;
																																		end
																																	end
																																else
																																	v140 = v140 + 1;
																																end
																																break;
																															end
																															if (2 == v219) then
																																for v528 = 1, v221 do
																																	v146[v222 + v528] = v223[v528];
																																end
																																v224 = v223[1];
																																v219 = 3;
																															end
																														end
																													else
																														local v225 = 0;
																														local v226;
																														local v227;
																														while true do
																															if (v225 == 0) then
																																v226 = v148[2];
																																v227 = {};
																																v225 = 1;
																															end
																															if (v225 == 1) then
																																for v531 = 1, #v145 do
																																	local v532 = 0;
																																	local v533;
																																	local v534;
																																	while true do
																																		if (v532 == 0) then
																																			v533 = 0;
																																			v534 = nil;
																																			v532 = 1;
																																		end
																																		if (v532 == 1) then
																																			while true do
																																				if (v533 == 0) then
																																					v534 = v145[v531];
																																					for v704 = 0, #v534 do
																																						local v705 = 0;
																																						local v706;
																																						local v707;
																																						local v708;
																																						while true do
																																							if (v705 == 0) then
																																								v706 = v534[v704];
																																								v707 = v706[1];
																																								v705 = 1;
																																							end
																																							if (v705 == 1) then
																																								v708 = v706[2];
																																								if ((v707 == v146) and (v708 >= v226)) then
																																									local v735 = 0;
																																									while true do
																																										if (0 == v735) then
																																											v227[v708] = v707[v708];
																																											v706[1] = v227;
																																											break;
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end
																																break;
																															end
																														end
																													end
																												elseif (v149 <= 9) then
																													if (v149 <= 7) then
																														local v190 = 0;
																														local v191;
																														local v192;
																														local v193;
																														local v194;
																														while true do
																															if (v190 == 2) then
																																for v457 = v191, v141 do
																																	local v458 = 0;
																																	local v459;
																																	while true do
																																		if (0 == v458) then
																																			v459 = 0;
																																			while true do
																																				if (v459 == 0) then
																																					v194 = v194 + (351 - (87 + 263));
																																					v146[v457] = v192[v194];
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end
																																break;
																															end
																															if (v190 == 1) then
																																v141 = (v193 + v191) - (1 - 0);
																																v194 = 0;
																																v190 = 2;
																															end
																															if (v190 == 0) then
																																v191 = v148[4 - 2];
																																v192, v193 = v139(v146[v191](v21(v146, v191 + (1 - 0), v148[3])));
																																v190 = 1;
																															end
																														end
																													elseif (v149 == 8) then
																														local v228 = 0;
																														local v229;
																														while true do
																															if (v228 == 0) then
																																v229 = v148[182 - (67 + 113)];
																																v146[v229] = v146[v229](v21(v146, v229 + 1, v141));
																																break;
																															end
																														end
																													else
																														v146[v148[2]] = v146[v148[3]] + v146[v148[4]];
																													end
																												elseif (v149 <= 11) then
																													if (v149 == 10) then
																														v146[v148[2 + 0]] = v148[3] + v146[v148[4]];
																													else
																														v146[v148[2]] = v148[7 - 4];
																													end
																												elseif (v149 > 12) then
																													v146[v148[2]] = v62[v148[3]];
																												else
																													do
																														return v146[v148[2]];
																													end
																												end
																											elseif (v149 <= 20) then
																												if (v149 <= (12 + 4)) then
																													if (v149 <= 14) then
																														v146[v148[2]] = v146[v148[3]] + v148[4];
																													elseif (v149 > 15) then
																														if (v146[v148[7 - 5]] == v148[4]) then
																															v140 = v140 + 1;
																														else
																															v140 = v148[3];
																														end
																													else
																														local v236 = 0;
																														local v237;
																														local v238;
																														while true do
																															if (v236 == 0) then
																																v237 = 0;
																																v238 = nil;
																																v236 = 1;
																															end
																															if (v236 == 1) then
																																while true do
																																	if (v237 == 0) then
																																		v238 = v148[2];
																																		v146[v238](v21(v146, v238 + 1, v148[3]));
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																												elseif (v149 <= 18) then
																													if (v149 > 17) then
																														v146[v148[2]][v146[v148[955 - (802 + 150)]]] = v146[v148[4]];
																													else
																														local v241 = 0;
																														local v242;
																														local v243;
																														local v244;
																														while true do
																															if (v241 == 1) then
																																v244 = 0;
																																for v535 = v242, v148[4] do
																																	local v536 = 0;
																																	while true do
																																		if (v536 == 0) then
																																			v244 = v244 + 1;
																																			v146[v535] = v243[v244];
																																			break;
																																		end
																																	end
																																end
																																break;
																															end
																															if (0 == v241) then
																																v242 = v148[2];
																																v243 = {v146[v242](v146[v242 + (2 - 1)])};
																																v241 = 1;
																															end
																														end
																													end
																												elseif (v149 > 19) then
																													if v146[v148[2]] then
																														v140 = v140 + (1 - 0);
																													else
																														v140 = v148[3 + 0];
																													end
																												else
																													v146[v148[2]] = #v146[v148[1000 - (915 + 82)]];
																												end
																											elseif (v149 <= 24) then
																												if (v149 <= 22) then
																													if (v149 == 21) then
																														do
																															return;
																														end
																													else
																														v146[v148[2]] = v146[v148[3]];
																													end
																												elseif (v149 == 23) then
																													local v248 = 0;
																													local v249;
																													local v250;
																													while true do
																														if (v248 == 0) then
																															v249 = 0;
																															v250 = nil;
																															v248 = 1;
																														end
																														if (v248 == 1) then
																															while true do
																																if (v249 == 0) then
																																	v250 = v148[2];
																																	v146[v250](v21(v146, v250 + 1, v141));
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												else
																													v146[v148[2]][v148[3]] = v148[4];
																												end
																											elseif (v149 <= (73 - 47)) then
																												if (v149 == 25) then
																													v146[v148[2]] = v146[v148[3]];
																												else
																													v146[v148[2]] = v146[v148[2 + 1]][v148[4]];
																												end
																											elseif (v149 > 27) then
																												v146[v148[2]][v146[v148[3 - 0]]] = v146[v148[4]];
																											else
																												local v259 = 0;
																												local v260;
																												local v261;
																												local v262;
																												local v263;
																												while true do
																													if (v259 == 1) then
																														v262 = nil;
																														v263 = nil;
																														v259 = 2;
																													end
																													if (v259 == 2) then
																														while true do
																															if (v260 == 0) then
																																local v582 = 0;
																																while true do
																																	if (v582 == 1) then
																																		v260 = 1;
																																		break;
																																	end
																																	if (v582 == 0) then
																																		v261 = v148[2];
																																		v262 = v146[v261 + 2];
																																		v582 = 1;
																																	end
																																end
																															end
																															if (v260 == 1) then
																																local v583 = 0;
																																while true do
																																	if (v583 == 0) then
																																		v263 = v146[v261] + v262;
																																		v146[v261] = v263;
																																		v583 = 1;
																																	end
																																	if (v583 == 1) then
																																		v260 = 2;
																																		break;
																																	end
																																end
																															end
																															if (v260 == 2) then
																																if (v262 > 0) then
																																	if (v263 <= v146[v261 + 1]) then
																																		local v683 = 0;
																																		while true do
																																			if (v683 == 0) then
																																				v140 = v148[3];
																																				v146[v261 + (1190 - (1069 + 118))] = v263;
																																				break;
																																			end
																																		end
																																	end
																																elseif (v263 >= v146[v261 + 1]) then
																																	local v684 = 0;
																																	local v685;
																																	while true do
																																		if (v684 == 0) then
																																			v685 = 0;
																																			while true do
																																				if (v685 == 0) then
																																					v140 = v148[3];
																																					v146[v261 + 3] = v263;
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end
																																break;
																															end
																														end
																														break;
																													end
																													if (v259 == 0) then
																														v260 = 0;
																														v261 = nil;
																														v259 = 1;
																													end
																												end
																											end
																										elseif (v149 <= 43) then
																											if (v149 <= 35) then
																												if (v149 <= 31) then
																													if (v149 <= 29) then
																														local v196 = 0;
																														local v197;
																														while true do
																															if (v196 == 0) then
																																v197 = v148[2];
																																do
																																	return v21(v146, v197, v197 + v148[3]);
																																end
																																break;
																															end
																														end
																													elseif (v149 == 30) then
																														local v264 = 0;
																														local v265;
																														local v266;
																														local v267;
																														while true do
																															if (v264 == 1) then
																																v267 = nil;
																																while true do
																																	if (v265 == 0) then
																																		local v584 = 0;
																																		while true do
																																			if (v584 == 1) then
																																				v265 = 1;
																																				break;
																																			end
																																			if (v584 == 0) then
																																				v266 = v148[2];
																																				v267 = v146[v266];
																																				v584 = 1;
																																			end
																																		end
																																	end
																																	if (v265 == 1) then
																																		for v624 = v266 + 1, v141 do
																																			v15(v267, v146[v624]);
																																		end
																																		break;
																																	end
																																end
																																break;
																															end
																															if (v264 == 0) then
																																v265 = 0;
																																v266 = nil;
																																v264 = 1;
																															end
																														end
																													else
																														local v268 = 0;
																														local v269;
																														local v270;
																														local v271;
																														while true do
																															if (v268 == 1) then
																																v271 = nil;
																																while true do
																																	if (1 == v269) then
																																		v146[v270 + 1] = v271;
																																		v146[v270] = v271[v146[v148[4]]];
																																		break;
																																	end
																																	if (v269 == 0) then
																																		local v588 = 0;
																																		while true do
																																			if (0 == v588) then
																																				v270 = v148[2];
																																				v271 = v146[v148[3]];
																																				v588 = 1;
																																			end
																																			if (v588 == 1) then
																																				v269 = 1;
																																				break;
																																			end
																																		end
																																	end
																																end
																																break;
																															end
																															if (v268 == 0) then
																																v269 = 0;
																																v270 = nil;
																																v268 = 1;
																															end
																														end
																													end
																												elseif (v149 <= 33) then
																													if (v149 > 32) then
																														local v272 = 0;
																														local v273;
																														local v274;
																														local v275;
																														while true do
																															if (v272 == 1) then
																																v275 = v148[3];
																																for v537 = 1, v275 do
																																	v274[v537] = v146[v273 + v537];
																																end
																																break;
																															end
																															if (v272 == 0) then
																																v273 = v148[2];
																																v274 = v146[v273];
																																v272 = 1;
																															end
																														end
																													elseif (v148[2] < v146[v148[4]]) then
																														v140 = v140 + 1;
																													else
																														v140 = v148[3];
																													end
																												elseif (v149 > 34) then
																													local v276 = 0;
																													local v277;
																													local v278;
																													local v279;
																													while true do
																														if (0 == v276) then
																															v277 = 0;
																															v278 = nil;
																															v276 = 1;
																														end
																														if (v276 == 1) then
																															v279 = nil;
																															while true do
																																if (1 == v277) then
																																	for v625 = v278 + 1, v141 do
																																		v15(v279, v146[v625]);
																																	end
																																	break;
																																end
																																if (v277 == 0) then
																																	local v589 = 0;
																																	while true do
																																		if (1 == v589) then
																																			v277 = 1;
																																			break;
																																		end
																																		if (v589 == 0) then
																																			v278 = v148[2];
																																			v279 = v146[v278];
																																			v589 = 1;
																																		end
																																	end
																																end
																															end
																															break;
																														end
																													end
																												else
																													v146[v148[2]] = v146[v148[3]] % v148[4];
																												end
																											elseif (v149 <= 39) then
																												if (v149 <= 37) then
																													if (v149 > 36) then
																														if (v146[v148[2]] ~= v148[4]) then
																															v140 = v140 + 1;
																														else
																															v140 = v148[3];
																														end
																													else
																														local v281 = 0;
																														local v282;
																														local v283;
																														local v284;
																														local v285;
																														while true do
																															if (v281 == 0) then
																																v282 = 0;
																																v283 = nil;
																																v281 = 1;
																															end
																															if (v281 == 2) then
																																while true do
																																	if (v282 == 0) then
																																		local v590 = 0;
																																		while true do
																																			if (v590 == 1) then
																																				v282 = 1;
																																				break;
																																			end
																																			if (v590 == 0) then
																																				v283 = v148[2];
																																				v284 = {v146[v283](v146[v283 + 1])};
																																				v590 = 1;
																																			end
																																		end
																																	end
																																	if (1 == v282) then
																																		v285 = 0;
																																		for v626 = v283, v148[4] do
																																			local v627 = 0;
																																			while true do
																																				if (v627 == 0) then
																																					v285 = v285 + 1;
																																					v146[v626] = v284[v285];
																																					break;
																																				end
																																			end
																																		end
																																		break;
																																	end
																																end
																																break;
																															end
																															if (1 == v281) then
																																v284 = nil;
																																v285 = nil;
																																v281 = 2;
																															end
																														end
																													end
																												elseif (v149 == (85 - 47)) then
																													local v286 = 0;
																													local v287;
																													local v288;
																													while true do
																														if (v286 == 1) then
																															while true do
																																if (0 == v287) then
																																	v288 = v148[3 - 1];
																																	do
																																		return v146[v288](v21(v146, v288 + 1, v148[3]));
																																	end
																																	break;
																																end
																															end
																															break;
																														end
																														if (v286 == 0) then
																															v287 = 0;
																															v288 = nil;
																															v286 = 1;
																														end
																													end
																												else
																													v146[v148[2]] = v62[v148[3]];
																												end
																											elseif (v149 <= (8 + 33)) then
																												if (v149 == 40) then
																													for v448 = v148[2], v148[4 - 1] do
																														v146[v448] = nil;
																													end
																												else
																													local v291 = 0;
																													local v292;
																													local v293;
																													while true do
																														if (1 == v291) then
																															while true do
																																if (v292 == 0) then
																																	v293 = v148[2 + 0];
																																	v146[v293] = v146[v293](v146[v293 + 1]);
																																	break;
																																end
																															end
																															break;
																														end
																														if (v291 == 0) then
																															v292 = 0;
																															v293 = nil;
																															v291 = 1;
																														end
																													end
																												end
																											elseif (v149 > 42) then
																												local v294 = 0;
																												local v295;
																												local v296;
																												while true do
																													if (v294 == 0) then
																														v295 = v148[2];
																														v296 = v146[v295];
																														v294 = 1;
																													end
																													if (v294 == 1) then
																														for v540 = v295 + 1, v148[3] do
																															v15(v296, v146[v540]);
																														end
																														break;
																													end
																												end
																											else
																												local v297 = 0;
																												local v298;
																												local v299;
																												local v300;
																												while true do
																													if (v297 == 0) then
																														v298 = 0;
																														v299 = nil;
																														v297 = 1;
																													end
																													if (v297 == 1) then
																														v300 = nil;
																														while true do
																															if (0 == v298) then
																																local v594 = 0;
																																while true do
																																	if (v594 == 1) then
																																		v298 = 1;
																																		break;
																																	end
																																	if (v594 == 0) then
																																		v299 = v148[2];
																																		v300 = v146[v148[794 - (368 + 423)]];
																																		v594 = 1;
																																	end
																																end
																															end
																															if (v298 == 1) then
																																v146[v299 + 1] = v300;
																																v146[v299] = v300[v148[4]];
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																										elseif (v149 <= 50) then
																											if (v149 <= (144 - 98)) then
																												if (v149 <= 44) then
																													local v198 = 0;
																													local v199;
																													local v200;
																													local v201;
																													while true do
																														if (v198 == 2) then
																															for v464 = 1, v148[4] do
																																local v465 = 0;
																																local v466;
																																local v467;
																																while true do
																																	if (v465 == 0) then
																																		v466 = 0;
																																		v467 = nil;
																																		v465 = 1;
																																	end
																																	if (v465 == 1) then
																																		while true do
																																			if (v466 == 1) then
																																				if (v467[1] == 25) then
																																					v201[v464 - 1] = {v146,v467[3]};
																																				else
																																					v201[v464 - 1] = {v62,v467[3]};
																																				end
																																				v145[#v145 + 1] = v201;
																																				break;
																																			end
																																			if (v466 == 0) then
																																				local v655 = 0;
																																				while true do
																																					if (v655 == 0) then
																																						v140 = v140 + 1;
																																						v467 = v136[v140];
																																						v655 = 1;
																																					end
																																					if (1 == v655) then
																																						v466 = 1;
																																						break;
																																					end
																																				end
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															v146[v148[2]] = v43(v199, v200, v63);
																															break;
																														end
																														if (v198 == 1) then
																															v201 = {};
																															v200 = v18({}, {[v7("\99\58\201\161\38\221\68", "\184\60\101\160\207\66")]=function(v468, v469)
																																local v470 = 0;
																																local v471;
																																while true do
																																	if (v470 == 0) then
																																		v471 = v201[v469];
																																		return v471[1][v471[2]];
																																	end
																																end
																															end,[v7("\14\189\114\185\38\139\114\184\52\154", "\220\81\226\28")]=function(v472, v473, v474)
																																local v475 = 0;
																																local v476;
																																while true do
																																	if (v475 == 0) then
																																		v476 = v201[v473];
																																		v476[3 - 2][v476[2]] = v474;
																																		break;
																																	end
																																end
																															end});
																															v198 = 2;
																														end
																														if (v198 == 0) then
																															v199 = v137[v148[21 - (10 + 8)]];
																															v200 = nil;
																															v198 = 1;
																														end
																													end
																												elseif (v149 == 45) then
																													local v301 = 0;
																													local v302;
																													local v303;
																													local v304;
																													while true do
																														if (v301 == 1) then
																															v304 = 0;
																															for v541 = v302, v148[4] do
																																local v542 = 0;
																																local v543;
																																while true do
																																	if (v542 == 0) then
																																		v543 = 0;
																																		while true do
																																			if (v543 == 0) then
																																				v304 = v304 + 1;
																																				v146[v541] = v303[v304];
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																														if (v301 == 0) then
																															v302 = v148[2];
																															v303 = {v146[v302](v21(v146, v302 + (443 - (416 + 26)), v141))};
																															v301 = 1;
																														end
																													end
																												else
																													v146[v148[2]] = v146[v148[3]][v146[v148[4]]];
																												end
																											elseif (v149 <= 48) then
																												if (v149 == 47) then
																													local v307 = 0;
																													local v308;
																													while true do
																														if (v307 == 0) then
																															v308 = v148[2];
																															v146[v308] = v146[v308](v146[v308 + 1]);
																															break;
																														end
																													end
																												else
																													do
																														return;
																													end
																												end
																											elseif (v149 == (156 - 107)) then
																												local v309 = 0;
																												local v310;
																												local v311;
																												local v312;
																												local v313;
																												while true do
																													if (v309 == 2) then
																														for v544 = v310, v141 do
																															local v545 = 0;
																															local v546;
																															while true do
																																if (v545 == 0) then
																																	v546 = 0;
																																	while true do
																																		if (0 == v546) then
																																			v313 = v313 + 1;
																																			v146[v544] = v311[v313];
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																														break;
																													end
																													if (v309 == 1) then
																														v141 = (v312 + v310) - 1;
																														v313 = 0 - 0;
																														v309 = 2;
																													end
																													if (v309 == 0) then
																														v310 = v148[2];
																														v311, v312 = v139(v146[v310](v21(v146, v310 + 1, v148[2 + 1])));
																														v309 = 1;
																													end
																												end
																											else
																												local v314 = 0;
																												local v315;
																												local v316;
																												local v317;
																												local v318;
																												local v319;
																												while true do
																													if (v314 == 1) then
																														v317 = nil;
																														v318 = nil;
																														v314 = 2;
																													end
																													if (v314 == 2) then
																														v319 = nil;
																														while true do
																															if (v315 == 0) then
																																local v598 = 0;
																																while true do
																																	if (v598 == 0) then
																																		v316 = v148[440 - (145 + 293)];
																																		v317, v318 = v139(v146[v316](v21(v146, v316 + 1, v141)));
																																		v598 = 1;
																																	end
																																	if (v598 == 1) then
																																		v315 = 1;
																																		break;
																																	end
																																end
																															end
																															if (v315 == 1) then
																																local v599 = 0;
																																while true do
																																	if (v599 == 1) then
																																		v315 = 2;
																																		break;
																																	end
																																	if (v599 == 0) then
																																		v141 = (v318 + v316) - 1;
																																		v319 = 0;
																																		v599 = 1;
																																	end
																																end
																															end
																															if (v315 == 2) then
																																for v628 = v316, v141 do
																																	local v629 = 0;
																																	local v630;
																																	while true do
																																		if (v629 == 0) then
																																			v630 = 0;
																																			while true do
																																				if (v630 == 0) then
																																					v319 = v319 + 1;
																																					v146[v628] = v317[v319];
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end
																																break;
																															end
																														end
																														break;
																													end
																													if (v314 == 0) then
																														v315 = 0;
																														v316 = nil;
																														v314 = 1;
																													end
																												end
																											end
																										elseif (v149 <= 54) then
																											if (v149 <= 52) then
																												if (v149 == 51) then
																													v63[v148[433 - (44 + 386)]] = v146[v148[1488 - (998 + 488)]];
																												elseif (v148[2] <= v146[v148[4]]) then
																													v140 = v140 + 1;
																												else
																													v140 = v148[1 + 2];
																												end
																											elseif (v149 > 53) then
																												local v322 = 0;
																												local v323;
																												local v324;
																												while true do
																													if (v322 == 0) then
																														v323 = 0;
																														v324 = nil;
																														v322 = 1;
																													end
																													if (v322 == 1) then
																														while true do
																															if (v323 == 0) then
																																v324 = v148[2];
																																do
																																	return v21(v146, v324, v141);
																																end
																																break;
																															end
																														end
																														break;
																													end
																												end
																											else
																												local v325 = 0;
																												local v326;
																												local v327;
																												while true do
																													if (v325 == 0) then
																														v326 = 0;
																														v327 = nil;
																														v325 = 1;
																													end
																													if (v325 == 1) then
																														while true do
																															if (v326 == 0) then
																																v327 = v148[2];
																																v146[v327] = v146[v327]();
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																										elseif (v149 <= 56) then
																											if (v149 > (46 + 9)) then
																												v146[v148[2]] = v146[v148[775 - (201 + 571)]] + v148[4];
																											else
																												local v329 = 0;
																												local v330;
																												local v331;
																												local v332;
																												while true do
																													if (v329 == 1) then
																														v332 = nil;
																														while true do
																															if (v330 == 0) then
																																local v603 = 0;
																																while true do
																																	if (v603 == 1) then
																																		v330 = 1;
																																		break;
																																	end
																																	if (v603 == 0) then
																																		v331 = v148[2];
																																		v332 = {};
																																		v603 = 1;
																																	end
																																end
																															end
																															if (v330 == 1) then
																																for v631 = 1139 - (116 + 1022), #v145 do
																																	local v632 = 0;
																																	local v633;
																																	local v634;
																																	while true do
																																		if (v632 == 0) then
																																			v633 = 0;
																																			v634 = nil;
																																			v632 = 1;
																																		end
																																		if (v632 == 1) then
																																			while true do
																																				if (v633 == 0) then
																																					v634 = v145[v631];
																																					for v729 = 0, #v634 do
																																						local v730 = 0;
																																						local v731;
																																						local v732;
																																						local v733;
																																						local v734;
																																						while true do
																																							if (1 == v730) then
																																								v733 = nil;
																																								v734 = nil;
																																								v730 = 2;
																																							end
																																							if (v730 == 2) then
																																								while true do
																																									if (v731 == 1) then
																																										v734 = v732[2];
																																										if ((v733 == v146) and (v734 >= v331)) then
																																											local v743 = 0;
																																											while true do
																																												if (v743 == 0) then
																																													v332[v734] = v733[v734];
																																													v732[1 + 0] = v332;
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v731 == 0) then
																																										local v742 = 0;
																																										while true do
																																											if (1 == v742) then
																																												v731 = 1;
																																												break;
																																											end
																																											if (0 == v742) then
																																												v732 = v634[v729];
																																												v733 = v732[4 - 3];
																																												v742 = 1;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v730 == 0) then
																																								v731 = 0;
																																								v732 = nil;
																																								v730 = 1;
																																							end
																																						end
																																					end
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end
																																break;
																															end
																														end
																														break;
																													end
																													if (v329 == 0) then
																														v330 = 0;
																														v331 = nil;
																														v329 = 1;
																													end
																												end
																											end
																										elseif (v149 > 57) then
																											local v333 = 0;
																											local v334;
																											local v335;
																											while true do
																												if (0 == v333) then
																													v334 = 0;
																													v335 = nil;
																													v333 = 1;
																												end
																												if (1 == v333) then
																													while true do
																														if (v334 == 0) then
																															v335 = v148[2];
																															do
																																return v146[v335](v21(v146, v335 + 1, v148[3]));
																															end
																															break;
																														end
																													end
																													break;
																												end
																											end
																										else
																											local v336 = 0;
																											local v337;
																											local v338;
																											local v339;
																											while true do
																												if (v336 == 1) then
																													v339 = 0;
																													for v547 = v337, v148[4] do
																														local v548 = 0;
																														while true do
																															if (v548 == 0) then
																																v339 = v339 + 1;
																																v146[v547] = v338[v339];
																																break;
																															end
																														end
																													end
																													break;
																												end
																												if (0 == v336) then
																													v337 = v148[2];
																													v338 = {v146[v337](v21(v146, v337 + 1, v141))};
																													v336 = 1;
																												end
																											end
																										end
																									elseif (v149 <= 88) then
																										if (v149 <= 73) then
																											if (v149 <= 65) then
																												if (v149 <= 61) then
																													if (v149 <= 59) then
																														local v202 = 0;
																														local v203;
																														while true do
																															if (0 == v202) then
																																v203 = v148[2];
																																v146[v203] = v146[v203]();
																																break;
																															end
																														end
																													elseif (v149 == 60) then
																														v146[v148[2]] = v146[v148[10 - 7]] - v148[4];
																													elseif (v148[2] <= v146[v148[4]]) then
																														v140 = v140 + 1;
																													else
																														v140 = v148[3];
																													end
																												elseif (v149 <= 63) then
																													if (v149 == 62) then
																														local v341 = 0;
																														local v342;
																														local v343;
																														local v344;
																														while true do
																															if (v341 == 0) then
																																v342 = v137[v148[10 - 7]];
																																v343 = nil;
																																v341 = 1;
																															end
																															if (v341 == 2) then
																																for v549 = 1, v148[4] do
																																	local v550 = 0;
																																	local v551;
																																	local v552;
																																	while true do
																																		if (1 == v550) then
																																			while true do
																																				if (0 == v551) then
																																					local v694 = 0;
																																					while true do
																																						if (v694 == 1) then
																																							v551 = 1;
																																							break;
																																						end
																																						if (0 == v694) then
																																							v140 = v140 + (860 - (814 + 45));
																																							v552 = v136[v140];
																																							v694 = 1;
																																						end
																																					end
																																				end
																																				if (v551 == 1) then
																																					if (v552[1] == 25) then
																																						v344[v549 - 1] = {v146,v552[3]};
																																					else
																																						v344[v549 - (1 + 0)] = {v62,v552[3]};
																																					end
																																					v145[#v145 + 1] = v344;
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																		if (v550 == 0) then
																																			v551 = 0;
																																			v552 = nil;
																																			v550 = 1;
																																		end
																																	end
																																end
																																v146[v148[2]] = v43(v342, v343, v63);
																																break;
																															end
																															if (v341 == 1) then
																																v344 = {};
																																v343 = v18({}, {[v7("\44\234\139\245\238\194\11", "\167\115\181\226\155\138")]=function(v553, v554)
																																	local v555 = 0;
																																	local v556;
																																	while true do
																																		if (v555 == 0) then
																																			v556 = v344[v554];
																																			return v556[1][v556[2]];
																																		end
																																	end
																																end,[v7("\221\29\233\89\108\120\200\230\39\255", "\166\130\66\135\60\27\17")]=function(v557, v558, v559)
																																	local v560 = 0;
																																	local v561;
																																	local v562;
																																	while true do
																																		if (v560 == 1) then
																																			while true do
																																				if (v561 == 0) then
																																					v562 = v344[v558];
																																					v562[1][v562[2]] = v559;
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																		if (v560 == 0) then
																																			v561 = 0;
																																			v562 = nil;
																																			v560 = 1;
																																		end
																																	end
																																end});
																																v341 = 2;
																															end
																														end
																													else
																														local v345 = 0;
																														local v346;
																														local v347;
																														local v348;
																														while true do
																															if (v345 == 1) then
																																v348 = nil;
																																while true do
																																	if (v346 == 1) then
																																		v146[v347 + 1] = v348;
																																		v146[v347] = v348[v146[v148[4]]];
																																		break;
																																	end
																																	if (v346 == 0) then
																																		local v608 = 0;
																																		while true do
																																			if (v608 == 0) then
																																				v347 = v148[2];
																																				v348 = v146[v148[3]];
																																				v608 = 1;
																																			end
																																			if (1 == v608) then
																																				v346 = 1;
																																				break;
																																			end
																																		end
																																	end
																																end
																																break;
																															end
																															if (0 == v345) then
																																v346 = 0;
																																v347 = nil;
																																v345 = 1;
																															end
																														end
																													end
																												elseif (v149 == 64) then
																													local v349 = 0;
																													local v350;
																													local v351;
																													local v352;
																													local v353;
																													while true do
																														if (v349 == 0) then
																															v350 = v148[2];
																															v351, v352 = v139(v146[v350](v146[v350 + 1]));
																															v349 = 1;
																														end
																														if (v349 == 1) then
																															v141 = (v352 + v350) - 1;
																															v353 = 0;
																															v349 = 2;
																														end
																														if (v349 == 2) then
																															for v563 = v350, v141 do
																																local v564 = 0;
																																local v565;
																																while true do
																																	if (v564 == 0) then
																																		v565 = 0;
																																		while true do
																																			if (v565 == 0) then
																																				v353 = v353 + 1 + 0;
																																				v146[v563] = v351[v353];
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																													end
																												else
																													v146[v148[2]][v148[3]] = v146[v148[4]];
																												end
																											elseif (v149 <= 69) then
																												if (v149 <= 67) then
																													if (v149 > 66) then
																														v146[v148[887 - (261 + 624)]] = v63[v148[3]];
																													else
																														v146[v148[2]][v148[3]] = v146[v148[4]];
																													end
																												elseif (v149 == (120 - 52)) then
																													v146[v148[2]] = v146[v148[3]][v146[v148[4]]];
																												elseif (v146[v148[2]] == v146[v148[4]]) then
																													v140 = v140 + 1;
																												else
																													v140 = v148[3];
																												end
																											elseif (v149 <= 71) then
																												if (v149 == 70) then
																													v146[v148[2]] = v148[3] ~= 0;
																												else
																													v146[v148[2]] = v146[v148[3]] % v146[v148[4]];
																												end
																											elseif (v149 == 72) then
																												v146[v148[2]] = v146[v148[3]][v148[4]];
																											else
																												local v366 = 0;
																												local v367;
																												local v368;
																												while true do
																													if (v366 == 1) then
																														v146[v367 + 1] = v368;
																														v146[v367] = v368[v148[1427 - (630 + 793)]];
																														break;
																													end
																													if (v366 == 0) then
																														v367 = v148[2];
																														v368 = v146[v148[1083 - (1020 + 60)]];
																														v366 = 1;
																													end
																												end
																											end
																										elseif (v149 <= 80) then
																											if (v149 <= 76) then
																												if (v149 <= (250 - 176)) then
																													v146[v148[2]] = v148[3];
																												elseif (v149 == 75) then
																													do
																														return v146[v148[2]];
																													end
																												elseif (v146[v148[2]] ~= v148[4]) then
																													v140 = v140 + 1;
																												else
																													v140 = v148[3];
																												end
																											elseif (v149 <= (369 - 291)) then
																												if (v149 > 77) then
																													local v369 = 0;
																													local v370;
																													while true do
																														if (v369 == 0) then
																															v370 = v148[2];
																															v146[v370](v146[v370 + 1]);
																															break;
																														end
																													end
																												else
																													local v371 = 0;
																													local v372;
																													local v373;
																													local v374;
																													local v375;
																													local v376;
																													while true do
																														if (v371 == 1) then
																															v374 = nil;
																															v375 = nil;
																															v371 = 2;
																														end
																														if (2 == v371) then
																															v376 = nil;
																															while true do
																																if (v372 == 1) then
																																	local v609 = 0;
																																	while true do
																																		if (v609 == 1) then
																																			v372 = 2;
																																			break;
																																		end
																																		if (v609 == 0) then
																																			v141 = (v375 + v373) - 1;
																																			v376 = 0;
																																			v609 = 1;
																																		end
																																	end
																																end
																																if (v372 == 2) then
																																	for v638 = v373, v141 do
																																		local v639 = 0;
																																		local v640;
																																		while true do
																																			if (v639 == 0) then
																																				v640 = 0;
																																				while true do
																																					if (0 == v640) then
																																						v376 = v376 + 1;
																																						v146[v638] = v374[v376];
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	break;
																																end
																																if (v372 == 0) then
																																	local v610 = 0;
																																	while true do
																																		if (v610 == 0) then
																																			v373 = v148[2];
																																			v374, v375 = v139(v146[v373](v21(v146, v373 + 1, v141)));
																																			v610 = 1;
																																		end
																																		if (v610 == 1) then
																																			v372 = 1;
																																			break;
																																		end
																																	end
																																end
																															end
																															break;
																														end
																														if (v371 == 0) then
																															v372 = 0;
																															v373 = nil;
																															v371 = 1;
																														end
																													end
																												end
																											elseif (v149 > 79) then
																												if (v146[v148[2]] == v148[4]) then
																													v140 = v140 + 1;
																												else
																													v140 = v148[3];
																												end
																											else
																												local v377 = 0;
																												local v378;
																												local v379;
																												while true do
																													if (v377 == 0) then
																														v378 = 0;
																														v379 = nil;
																														v377 = 1;
																													end
																													if (v377 == 1) then
																														while true do
																															if (0 == v378) then
																																v379 = v148[2];
																																do
																																	return v21(v146, v379, v141);
																																end
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																										elseif (v149 <= 84) then
																											if (v149 <= 82) then
																												if (v149 == 81) then
																													v146[v148[2]] = v43(v137[v148[3]], nil, v63);
																												else
																													local v381 = 0;
																													local v382;
																													local v383;
																													local v384;
																													while true do
																														if (v381 == 0) then
																															v382 = v148[2];
																															v383 = v146[v382 + 1 + 1];
																															v381 = 1;
																														end
																														if (v381 == 1) then
																															v384 = v146[v382] + v383;
																															v146[v382] = v384;
																															v381 = 2;
																														end
																														if (v381 == 2) then
																															if (v383 > 0) then
																																if (v384 <= v146[v382 + 1]) then
																																	local v641 = 0;
																																	local v642;
																																	while true do
																																		if (v641 == 0) then
																																			v642 = 0;
																																			while true do
																																				if (v642 == 0) then
																																					v140 = v148[3];
																																					v146[v382 + 3] = v384;
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end
																															elseif (v384 >= v146[v382 + 1]) then
																																local v643 = 0;
																																local v644;
																																while true do
																																	if (v643 == 0) then
																																		v644 = 0;
																																		while true do
																																			if (v644 == 0) then
																																				v140 = v148[3];
																																				v146[v382 + 3] = v384;
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																													end
																												end
																											elseif (v149 > (285 - 202)) then
																												v146[v148[2]] = v146[v148[3]] % v148[4];
																											else
																												local v386 = 0;
																												local v387;
																												local v388;
																												local v389;
																												local v390;
																												while true do
																													if (v386 == 2) then
																														while true do
																															if (v387 == 1) then
																																v390 = v146[v388 + 2];
																																if (v390 > (1747 - (760 + 987))) then
																																	if (v389 > v146[v388 + 1]) then
																																		v140 = v148[3];
																																	else
																																		v146[v388 + (1916 - (1789 + 124))] = v389;
																																	end
																																elseif (v389 < v146[v388 + 1]) then
																																	v140 = v148[769 - (745 + 21)];
																																else
																																	v146[v388 + 3] = v389;
																																end
																																break;
																															end
																															if (v387 == 0) then
																																local v613 = 0;
																																while true do
																																	if (v613 == 1) then
																																		v387 = 1;
																																		break;
																																	end
																																	if (v613 == 0) then
																																		v388 = v148[2];
																																		v389 = v146[v388];
																																		v613 = 1;
																																	end
																																end
																															end
																														end
																														break;
																													end
																													if (v386 == 1) then
																														v389 = nil;
																														v390 = nil;
																														v386 = 2;
																													end
																													if (v386 == 0) then
																														v387 = 0;
																														v388 = nil;
																														v386 = 1;
																													end
																												end
																											end
																										elseif (v149 <= 86) then
																											if (v149 > 85) then
																												if not v146[v148[2]] then
																													v140 = v140 + 1;
																												else
																													v140 = v148[3];
																												end
																											else
																												local v391 = 0;
																												local v392;
																												while true do
																													if (v391 == 0) then
																														v392 = v148[2];
																														v146[v392](v21(v146, v392 + 1 + 0, v148[3]));
																														break;
																													end
																												end
																											end
																										elseif (v149 > 87) then
																											v140 = v148[3];
																										else
																											v140 = v148[3];
																										end
																									elseif (v149 <= 103) then
																										if (v149 <= (261 - 166)) then
																											if (v149 <= (356 - 265)) then
																												if (v149 <= 89) then
																													v146[v148[2]] = v148[1 + 2] + v146[v148[4]];
																												elseif (v149 > 90) then
																													v146[v148[2]] = v148[3] ~= 0;
																												else
																													v146[v148[2]]();
																												end
																											elseif (v149 <= (74 + 19)) then
																												if (v149 > (1147 - (87 + 968))) then
																													v146[v148[2]] = #v146[v148[3]];
																												else
																													v146[v148[2]]();
																												end
																											elseif (v149 > 94) then
																												v62[v148[3]] = v146[v148[2]];
																											else
																												v146[v148[2]][v146[v148[13 - 10]]] = v148[4];
																											end
																										elseif (v149 <= 99) then
																											if (v149 <= (89 + 8)) then
																												if (v149 > 96) then
																													v62[v148[3]] = v146[v148[2]];
																												else
																													local v403 = 0;
																													local v404;
																													local v405;
																													local v406;
																													while true do
																														if (v403 == 1) then
																															v406 = v148[3];
																															for v566 = 1, v406 do
																																v405[v566] = v146[v404 + v566];
																															end
																															break;
																														end
																														if (v403 == 0) then
																															v404 = v148[2];
																															v405 = v146[v404];
																															v403 = 1;
																														end
																													end
																												end
																											elseif (v149 > (221 - 123)) then
																												local v407 = 0;
																												local v408;
																												local v409;
																												local v410;
																												while true do
																													if (v407 == 1) then
																														v410 = nil;
																														while true do
																															if (0 == v408) then
																																local v614 = 0;
																																while true do
																																	if (v614 == 0) then
																																		v409 = v148[1416 - (447 + 966)];
																																		v410 = v146[v409];
																																		v614 = 1;
																																	end
																																	if (v614 == 1) then
																																		v408 = 1;
																																		break;
																																	end
																																end
																															end
																															if (v408 == 1) then
																																for v645 = v409 + (2 - 1), v148[4] do
																																	v410 = v410 .. v146[v645];
																																end
																																v146[v148[2]] = v410;
																																break;
																															end
																														end
																														break;
																													end
																													if (v407 == 0) then
																														v408 = 0;
																														v409 = nil;
																														v407 = 1;
																													end
																												end
																											else
																												v146[v148[2]] = {};
																											end
																										elseif (v149 <= 101) then
																											if (v149 > 100) then
																												for v454 = v148[2], v148[3] do
																													v146[v454] = nil;
																												end
																											elseif (v148[1819 - (1703 + 114)] == v146[v148[4]]) then
																												v140 = v140 + 1;
																											else
																												v140 = v148[3];
																											end
																										elseif (v149 > 102) then
																											v146[v148[2]][v146[v148[3]]] = v148[4];
																										else
																											local v414 = 0;
																											local v415;
																											local v416;
																											local v417;
																											local v418;
																											local v419;
																											while true do
																												if (v414 == 0) then
																													v415 = 0;
																													v416 = nil;
																													v414 = 1;
																												end
																												if (v414 == 1) then
																													v417 = nil;
																													v418 = nil;
																													v414 = 2;
																												end
																												if (v414 == 2) then
																													v419 = nil;
																													while true do
																														if (v415 == 2) then
																															for v646 = v416, v141 do
																																local v647 = 0;
																																local v648;
																																while true do
																																	if (v647 == 0) then
																																		v648 = 0;
																																		while true do
																																			if (v648 == 0) then
																																				v419 = v419 + 1;
																																				v146[v646] = v417[v419];
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																														if (v415 == 1) then
																															local v616 = 0;
																															while true do
																																if (v616 == 1) then
																																	v415 = 2;
																																	break;
																																end
																																if (v616 == 0) then
																																	v141 = (v418 + v416) - 1;
																																	v419 = 0;
																																	v616 = 1;
																																end
																															end
																														end
																														if (v415 == 0) then
																															local v617 = 0;
																															while true do
																																if (v617 == 1) then
																																	v415 = 1;
																																	break;
																																end
																																if (v617 == 0) then
																																	v416 = v148[2];
																																	v417, v418 = v139(v146[v416](v146[v416 + (702 - (376 + 325))]));
																																	v617 = 1;
																																end
																															end
																														end
																													end
																													break;
																												end
																											end
																										end
																									elseif (v149 <= (180 - 70)) then
																										if (v149 <= 106) then
																											if (v149 <= 104) then
																												if (v146[v148[2]] == v146[v148[4]]) then
																													v140 = v140 + (2 - 1);
																												else
																													v140 = v148[3];
																												end
																											elseif (v149 > 105) then
																												v146[v148[2]] = {};
																											else
																												v146[v148[2]] = v43(v137[v148[3]], nil, v63);
																											end
																										elseif (v149 <= 108) then
																											if (v149 == 107) then
																												local v423 = 0;
																												local v424;
																												local v425;
																												local v426;
																												local v427;
																												local v428;
																												while true do
																													if (3 == v423) then
																														if v428 then
																															local v578 = 0;
																															while true do
																																if (v578 == 0) then
																																	v146[v426] = v428;
																																	v140 = v148[3];
																																	break;
																																end
																															end
																														else
																															v140 = v140 + 1;
																														end
																														break;
																													end
																													if (2 == v423) then
																														for v569 = 1, v425 do
																															v146[v426 + v569] = v427[v569];
																														end
																														v428 = v427[1];
																														v423 = 3;
																													end
																													if (v423 == 1) then
																														v426 = v424 + 2;
																														v427 = {v146[v424](v146[v424 + 1], v146[v426])};
																														v423 = 2;
																													end
																													if (0 == v423) then
																														v424 = v148[2];
																														v425 = v148[4];
																														v423 = 1;
																													end
																												end
																											elseif (v148[2] < v146[v148[4]]) then
																												v140 = v140 + 1;
																											else
																												v140 = v148[3];
																											end
																										elseif (v149 == 109) then
																											v146[v148[2]] = v63[v148[3]];
																										elseif (v148[2] == v146[v148[4]]) then
																											v140 = v140 + 1;
																										else
																											v140 = v148[6 - 3];
																										end
																									elseif (v149 <= 114) then
																										if (v149 <= 112) then
																											if (v149 > 111) then
																												v63[v148[3]] = v146[v148[2]];
																											else
																												v146[v148[2]] = v146[v148[17 - (9 + 5)]] - v148[4];
																											end
																										elseif (v149 > 113) then
																											if v146[v148[2]] then
																												v140 = v140 + (377 - (85 + 291));
																											else
																												v140 = v148[3];
																											end
																										else
																											local v434 = 0;
																											local v435;
																											local v436;
																											while true do
																												if (v434 == 0) then
																													v435 = 0;
																													v436 = nil;
																													v434 = 1;
																												end
																												if (v434 == 1) then
																													while true do
																														if (v435 == 0) then
																															v436 = v148[2];
																															v146[v436] = v146[v436](v21(v146, v436 + 1, v141));
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																									elseif (v149 <= 116) then
																										if (v149 == (1380 - (243 + 1022))) then
																											local v437 = 0;
																											local v438;
																											while true do
																												if (0 == v437) then
																													v438 = v148[2];
																													v146[v438] = v146[v438](v21(v146, v438 + 1, v148[3]));
																													break;
																												end
																											end
																										else
																											v146[v148[2]][v148[3]] = v148[4];
																										end
																									elseif (v149 == 117) then
																										local v441 = 0;
																										local v442;
																										local v443;
																										local v444;
																										while true do
																											if (v441 == 0) then
																												v442 = 0;
																												v443 = nil;
																												v441 = 1;
																											end
																											if (v441 == 1) then
																												v444 = nil;
																												while true do
																													if (v442 == 0) then
																														local v620 = 0;
																														while true do
																															if (v620 == 1) then
																																v442 = 1;
																																break;
																															end
																															if (v620 == 0) then
																																v443 = v148[3];
																																v444 = v146[v443];
																																v620 = 1;
																															end
																														end
																													end
																													if (1 == v442) then
																														for v649 = v443 + 1, v148[14 - 10] do
																															v444 = v444 .. v146[v649];
																														end
																														v146[v148[2 + 0]] = v444;
																														break;
																													end
																												end
																												break;
																											end
																										end
																									else
																										v146[v148[2]] = v146[v148[3]] + v146[v148[4]];
																									end
																									v140 = v140 + 1;
																									break;
																								end
																							end
																						end
																						break;
																					end
																					if (v135 == 2) then
																						v144 = v20("#", ...) - 1;
																						v145 = {};
																						v146 = {};
																						for v163 = 0, v144 do
																							if (v163 >= v138) then
																								v142[v163 - v138] = v143[v163 + 1];
																							else
																								v146[v163] = v143[v163 + 1];
																							end
																						end
																						v135 = 3;
																					end
																					if (0 == v135) then
																						v136 = v66;
																						v137 = v67;
																						v138 = v68;
																						v139 = v41;
																						v135 = 1;
																					end
																				end
																			end;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										return v43(v42(), {}, v29)(...);
									end
								end
							end
							if (v31 == 6) then
								local v49 = 0;
								while true do
									if (v49 == 0) then
										v42 = nil;
										function v42()
											local v69 = 0;
											local v70;
											local v71;
											local v72;
											local v73;
											local v74;
											local v75;
											local v76;
											while true do
												if (v69 == 2) then
													v74 = nil;
													v75 = nil;
													v69 = 3;
												end
												if (1 == v69) then
													v72 = nil;
													v73 = nil;
													v69 = 2;
												end
												if (v69 == 0) then
													v70 = 0;
													v71 = nil;
													v69 = 1;
												end
												if (v69 == 3) then
													v76 = nil;
													while true do
														local v109 = 0;
														while true do
															if (v109 == 0) then
																if (v70 == 0) then
																	local v119 = 0;
																	while true do
																		if (v119 == 0) then
																			v71 = {};
																			v72 = {};
																			v119 = 1;
																		end
																		if (v119 == 1) then
																			v73 = {};
																			v70 = 1;
																			break;
																		end
																	end
																end
																if (v70 == 3) then
																	local v120 = 0;
																	while true do
																		if (v120 == 0) then
																			for v150 = 1, v37() do
																				v72[v150 - 1] = v42();
																			end
																			return v74;
																		end
																	end
																end
																v109 = 1;
															end
															if (v109 == 1) then
																if (v70 == 2) then
																	local v121 = 0;
																	while true do
																		if (v121 == 0) then
																			for v152 = 1, v75 do
																				local v153 = 0;
																				local v154;
																				local v155;
																				local v156;
																				while true do
																					if (v153 == 1) then
																						v156 = nil;
																						while true do
																							if (v154 == 0) then
																								local v174 = 0;
																								while true do
																									if (v174 == 0) then
																										v155 = v35();
																										v156 = nil;
																										v174 = 1;
																									end
																									if (v174 == 1) then
																										v154 = 1;
																										break;
																									end
																								end
																							end
																							if (v154 == 1) then
																								if (v155 == 1) then
																									v156 = v35() ~= 0;
																								elseif (v155 == (1639 - (1523 + 114))) then
																									v156 = v38();
																								elseif (v155 == 3) then
																									v156 = v39();
																								end
																								v76[v152] = v156;
																								break;
																							end
																						end
																						break;
																					end
																					if (v153 == 0) then
																						v154 = 0;
																						v155 = nil;
																						v153 = 1;
																					end
																				end
																			end
																			v74[3] = v35();
																			v121 = 1;
																		end
																		if (v121 == 1) then
																			for v157 = 1, v37() do
																				local v158 = 0;
																				local v159;
																				while true do
																					if (v158 == 0) then
																						v159 = v35();
																						if (v34(v159, 1, 1) == (0 + 0)) then
																							local v164 = 0;
																							local v165;
																							local v166;
																							local v167;
																							local v168;
																							while true do
																								if (v164 == 0) then
																									v165 = 0;
																									v166 = nil;
																									v164 = 1;
																								end
																								if (v164 == 2) then
																									while true do
																										if (3 == v165) then
																											if (v34(v167, 3, 3) == (4 - 3)) then
																												v168[4] = v76[v168[4]];
																											end
																											v71[v157] = v168;
																											break;
																										end
																										if (v165 == 2) then
																											local v179 = 0;
																											while true do
																												if (1 == v179) then
																													v165 = 3;
																													break;
																												end
																												if (0 == v179) then
																													if (v34(v167, 1271 - (226 + 1044), 1) == 1) then
																														v168[2] = v76[v168[2]];
																													end
																													if (v34(v167, 2, 2) == 1) then
																														v168[3] = v76[v168[3]];
																													end
																													v179 = 1;
																												end
																											end
																										end
																										if (v165 == 1) then
																											local v180 = 0;
																											while true do
																												if (v180 == 1) then
																													v165 = 2;
																													break;
																												end
																												if (v180 == 0) then
																													v168 = {v36(),v36(),nil,nil};
																													if (v166 == 0) then
																														local v188 = 0;
																														while true do
																															if (v188 == 0) then
																																v168[3] = v36();
																																v168[4] = v36();
																																break;
																															end
																														end
																													elseif (v166 == 1) then
																														v168[3] = v37();
																													elseif (v166 == 2) then
																														v168[3] = v37() - (2 ^ 16);
																													elseif (v166 == 3) then
																														local v456 = 0;
																														while true do
																															if (0 == v456) then
																																v168[3] = v37() - (2 ^ 16);
																																v168[1069 - (68 + 997)] = v36();
																																break;
																															end
																														end
																													end
																													v180 = 1;
																												end
																											end
																										end
																										if (v165 == 0) then
																											local v181 = 0;
																											while true do
																												if (v181 == 0) then
																													v166 = v34(v159, 2, 3);
																													v167 = v34(v159, 4, 7 - 1);
																													v181 = 1;
																												end
																												if (v181 == 1) then
																													v165 = 1;
																													break;
																												end
																											end
																										end
																									end
																									break;
																								end
																								if (1 == v164) then
																									v167 = nil;
																									v168 = nil;
																									v164 = 2;
																								end
																							end
																						end
																						break;
																					end
																				end
																			end
																			v70 = 3;
																			break;
																		end
																	end
																end
																if (v70 == 1) then
																	local v122 = 0;
																	while true do
																		if (v122 == 1) then
																			v76 = {};
																			v70 = 2;
																			break;
																		end
																		if (0 == v122) then
																			v74 = {v71,v72,nil,v73};
																			v75 = v37();
																			v122 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v49 = 1;
									end
									if (v49 == 1) then
										v43 = nil;
										v31 = 7;
										break;
									end
								end
							end
							break;
						end
						if (v45 == 0) then
							if (v31 == 4) then
								local v50 = 0;
								while true do
									if (v50 == 1) then
										function v39(v77)
											local v78 = 0;
											local v79;
											local v80;
											while true do
												if (v78 == 2) then
													v80 = {};
													for v110 = 1, #v79 do
														v80[v110] = v10(v9(v11(v79, v110, v110)));
													end
													v78 = 3;
												end
												if (v78 == 1) then
													v79 = v11(v28, v32, (v32 + v77) - 1);
													v32 = v32 + v77;
													v78 = 2;
												end
												if (0 == v78) then
													v79 = nil;
													if not v77 then
														local v114 = 0;
														while true do
															if (v114 == 0) then
																v77 = v37();
																if (v77 == 0) then
																	return "";
																end
																break;
															end
														end
													end
													v78 = 1;
												end
												if (v78 == 3) then
													return v14(v80);
												end
											end
										end
										v31 = 5;
										break;
									end
									if (v50 == 0) then
										function v38()
											local v81 = 0;
											local v82;
											local v83;
											local v84;
											local v85;
											local v86;
											local v87;
											local v88;
											while true do
												if (v81 == 1) then
													v84 = nil;
													v85 = nil;
													v81 = 2;
												end
												if (v81 == 2) then
													v86 = nil;
													v87 = nil;
													v81 = 3;
												end
												if (v81 == 3) then
													v88 = nil;
													while true do
														local v112 = 0;
														while true do
															if (v112 == 0) then
																if (v82 == 0) then
																	local v123 = 0;
																	while true do
																		if (v123 == 0) then
																			v83 = v37();
																			v84 = v37();
																			v123 = 1;
																		end
																		if (v123 == 1) then
																			v82 = 1;
																			break;
																		end
																	end
																end
																if (1 == v82) then
																	local v124 = 0;
																	while true do
																		if (v124 == 1) then
																			v82 = 2;
																			break;
																		end
																		if (v124 == 0) then
																			v85 = 1;
																			v86 = (v34(v84, 1, 20) * ((570 - (367 + 201)) ^ (959 - (214 + 713)))) + v83;
																			v124 = 1;
																		end
																	end
																end
																v112 = 1;
															end
															if (v112 == 1) then
																if (v82 == 3) then
																	local v125 = 0;
																	while true do
																		if (v125 == 0) then
																			if (v87 == 0) then
																				if (v86 == 0) then
																					return v88 * 0;
																				else
																					local v161 = 0;
																					while true do
																						if (v161 == 0) then
																							v87 = 1;
																							v85 = 0;
																							break;
																						end
																					end
																				end
																			elseif (v87 == 2047) then
																				return ((v86 == 0) and (v88 * (1 / 0))) or (v88 * NaN);
																			end
																			return v16(v88, v87 - 1023) * (v85 + (v86 / (2 ^ 52)));
																		end
																	end
																end
																if (2 == v82) then
																	local v126 = 0;
																	while true do
																		if (v126 == 0) then
																			v87 = v34(v84, 6 + 15, 31);
																			v88 = ((v34(v84, 6 + 26) == 1) and -1) or 1;
																			v126 = 1;
																		end
																		if (v126 == 1) then
																			v82 = 3;
																			break;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (v81 == 0) then
													v82 = 0;
													v83 = nil;
													v81 = 1;
												end
											end
										end
										v39 = nil;
										v50 = 1;
									end
								end
							end
							if (v31 == 3) then
								local v51 = 0;
								while true do
									if (0 == v51) then
										v37 = nil;
										function v37()
											local v89 = 0;
											local v90;
											local v91;
											local v92;
											local v93;
											local v94;
											while true do
												if (2 == v89) then
													v94 = nil;
													while true do
														local v113 = 0;
														while true do
															if (v113 == 0) then
																if (v90 == 1) then
																	return (v94 * (16778147 - (857 + 74))) + (v93 * 65536) + (v92 * 256) + v91;
																end
																if (v90 == 0) then
																	local v127 = 0;
																	while true do
																		if (v127 == 0) then
																			v91, v92, v93, v94 = v9(v28, v32, v32 + 3);
																			v32 = v32 + 4;
																			v127 = 1;
																		end
																		if (v127 == 1) then
																			v90 = 1;
																			break;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (0 == v89) then
													v90 = 0;
													v91 = nil;
													v89 = 1;
												end
												if (1 == v89) then
													v92 = nil;
													v93 = nil;
													v89 = 2;
												end
											end
										end
										v51 = 1;
									end
									if (v51 == 1) then
										v38 = nil;
										v31 = 4;
										break;
									end
								end
							end
							v45 = 1;
						end
						if (v45 == 1) then
							if (v31 == 1) then
								local v52 = 0;
								while true do
									if (v52 == 1) then
										v35 = nil;
										v31 = 2;
										break;
									end
									if (v52 == 0) then
										v34 = nil;
										function v34(v95, v96, v97)
											if v97 then
												local v103 = 0;
												local v104;
												while true do
													if (v103 == 0) then
														v104 = (v95 / (2 ^ (v96 - 1))) % (2 ^ (((v97 - 1) - (v96 - 1)) + 1));
														return v104 - (v104 % (2 - 1));
													end
												end
											else
												local v105 = 0;
												local v106;
												while true do
													if (v105 == 0) then
														v106 = 2 ^ (v96 - 1);
														return (((v95 % (v106 + v106)) >= v106) and (1 - 0)) or (0 - 0);
													end
												end
											end
										end
										v52 = 1;
									end
								end
							end
							if (5 == v31) then
								local v53 = 0;
								while true do
									if (0 == v53) then
										v40 = v37;
										v41 = nil;
										v53 = 1;
									end
									if (v53 == 1) then
										function v41(...)
											return {...}, v20("#", ...);
										end
										v31 = 6;
										break;
									end
								end
							end
							v45 = 2;
						end
					end
				end
				break;
			end
		end
	end
	v23("LOL!", v17(), ...);
end
